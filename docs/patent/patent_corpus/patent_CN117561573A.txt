## Patent Reference

- Title: Automatic identification of the source of faults in nucleotide sequencing from base interpretation error patterns
- URL: https://patents.google.com/patent/CN117561573A/en

### Abstract

Abstract Methods, systems, and non-transitory computer readable media are disclosed for accurately and efficiently identifying base interpretation error scars or patterns from sequencing data to determine the source of faults contributing to those base interpretation error scars or patterns. For example, the disclosed systems can utilize a reference genome to determine nucleotide specific errors within the operation of a sequencing pipeline. Based on the co-occurrence of different nucleotide specific errors, the disclosed system is able to determine base interpretation error scars. The disclosed system is further capable of determining one or more sample error scars associated with a base interpretation error scar from a sample sequencing run. Based on this correlation and by utilizing statistical models, the disclosed systems can identify sources of faults that contribute to nucleotide-specific errors within base interpretation error scars.

### Description

Description Automatic identification of the source of faults in nucleotide sequencing from base interpretation error patternsCross Reference to Related Applications The present application claims the benefit and priority of U.S. provisional application No. 63/245,639, entitled 'AUTOMATICALLY IDENTIFYING FAILURE SOURCES IN NUCLEOTIDE SEQUENCING FROM BASE-CALL-ERROR PATTERNS,' filed on 9 and 17 of 2021, the contents of which provisional application is hereby incorporated by reference in its entirety. Background In recent years, biotechnology companies and research institutions have improved hardware and software platforms to determine nucleotide base sequences or entire genomes. For example, some existing nucleic acid sequencing platforms determine individual nucleotide bases within a sequence by using existing sanger sequencing or sequencing-by-synthesis (SBS). Using SBS, existing platforms can monitor tens of thousands or more oligonucleotides synthesized in parallel to determine nucleotide base interpretation. For example, a camera in the SBS platform can capture images of illuminated fluorescent tags from nucleotide bases incorporated into such oligonucleotides. After capturing the image, the existing SBS platform sends base interpretation data (or image data) to a computing device with sequencing data analysis software that compares the nucleotide reads to a reference genome. Based on these aligned nucleotide fragment reads, the existing SBS platform can determine nucleotide base reads of genomic regions and identify variants within the sample nucleic acid sequence. Despite advances in sequencing, existing nucleotide base sequencing platforms and sequencing data analysis software (hereinafter collectively referred to as 'existing sequencing systems') frequently determine incorrect nucleotide base decisions at multiple locations throughout the genome or during sequencing runs, but fail to accurately or effectively detect systematic or random causes of such incorrect nucleotide base decisions. In fact, existing sequencing systems may determine incorrect base reads, or slow or even stop the generation of base reads in a sequencing run, due to complex hardware failures, false reagents interacting with each other or with nucleotides, or complex software incorrectly analyzing nucleotide reads or other base read data. While some existing sequencing systems include sensors within the piping or other portions of the sequencing machine, such in-machine sensors can only detect a relatively small subset of hardware or reagent failures, and may not detect software errors at all. In addition to in-machine sensors, some existing systems utilize software trimming tools to exclude nucleotide fragment read ends with lower quality scores or other portions of the input data. However, conventional trimming tools often exacerbate coverage bias by reducing nucleotide fragment read lengths, thereby introducing additional complexity in detecting systematic errors. In this regard, many conventional error correction tools, such as bayesian clustering for error correction, bloom Filter Correction (BFC), bloom filter-based error correction solution (BLESS) for high-throughput sequencing reads, and others, are designed to correct common read errors or extend certain reads, but give little indication of the potential cause of such errors. Because of many potential points of failure in chemistry, machinery, or software, existing sequencing systems are often unable to accurately pinpoint potential factors contributing to data quality or base interpretation efficiency. In addition to inaccurate or absent fault detection, existing sequencing systems typically only use inefficient or bulky detection sensors or algorithms to detect systematic errors. For example, existing systems often consume additional processing resources, computing resources, memory resources, and time to properly or incorrectly identify sources of errors in sequencing. Conventional systems typically utilize a variety of methods and algorithms to analyze the genome and correct errors. Such methods and algorithms are computationally expensive. In one example, existing systems utilize a Louvian community detection algorithm by analyzing read pairs and generating a similarity score between the read pairs. To reduce the computational cost of generating a similarity score for each read pair, some existing systems analyze specific sections of the sequence, while other sections must be ignored. Calculating the similarity score between each read pair is typically both computationally and time intensive. Because existing systems often fail to effectively identify the source of the fault, they often require the user to repeat the sequencing run multiple times before successfully identifying the problem. In addition to computationally intensive error detection, some existing sequencing systems can only inflexibly address certain types of errors. Generally, sequencing platforms lack the infrastructure required to identify a broad spectrum of potential sources of failure that occur in existing systems. For example, existing sequencing systems typically utilize the Phred algorithm to determine a quality score that estimates the likelihood of single base interpretation being incorrect. Existing systems, even if able to estimate individual base interpretation errors, are generally unable to identify the root cause of such base interpretation errors. To illustrate, existing systems are generally unable to indicate whether a particular error is due to a fault in a machine, reagent, chemistry, or software. These problems and challenges, along with additional problems and challenges, exist in existing sequencing systems. Disclosure of Invention The present disclosure describes one or more embodiments of systems, methods, and non-transitory computer-readable storage media that address one or more of the above-mentioned problems or provide other advantages over the prior art. In particular, the disclosed system can accurately and efficiently identify base misinterpretation scars or patterns from sequencing data of a sequencing pipeline and determine the source of faults contributing to the base misinterpretation scars or patterns. For example, the disclosed systems may utilize a reference genome to determine nucleotide specific errors within a sequencing run of a sequencing pipeline. Based on the different magnitudes or combinations of nucleotide-specific errors, the disclosed systems can further identify base-interpretation error scars among the base-interpretation data of the sequencing pipeline. The disclosed systems can further analyze data from a sample sequencing run using the same or similar sequencing pipelines and then apply statistical models to identify sample base interpretation error scars from the sample sequencing run that are related to the base interpretation error scars. Based on the correlation between the base interpretation error scar and one or more corresponding sample base interpretation error scars from the data of the sequencing pipeline, the disclosed system can identify the source of the fault contributing to the nucleotide-specific error among the base interpretation error scars. For example, the disclosed system may identify the source of a fault in hardware, chemistry, or software. Additional features and advantages of one or more embodiments of the disclosure will be set forth in the description which follows, and in part will be apparent from the description, or may be learned by practice of such exemplary embodiments. Drawings The detailed description will describe various embodiments with additional specificity and detail through use of the accompanying drawings which are summarized below. Fig. 1 illustrates an environment in which a variant source identification system according to one or more embodiments of the present disclosure can operate. FIG. 2 illustrates an overview of a variant source identification system that detects a base interpretation error pattern from sequencing data of a sequencing pipeline and determines a source of a fault based on the base interpretation error pattern, according to one or more embodiments of the present disclosure. FIG. 3 illustrates a variant source identification system that determines a base interpretation error rate in accordance with one or more embodiments of the present disclosure. FIG. 4 illustrates a variant source identification system that detects a base interpretation error pattern from a grouped base interpretation error rate, in accordance with one or more embodiments of the present disclosure. FIG. 5 illustrates a variation source identification system that identifies sample base interpretation error patterns for one or more sample sequencing runs, according to one or more embodiments of the present disclosure. Fig. 6A-6C illustrate a variation source identification system in accordance with one or more embodiments of the present disclosure determining contribution metrics that indicate the contribution of sequencing pipeline material to base interpretation errors from a sequencing pipeline. Fig. 7A-7C illustrate a series of example variance component analysis outputs generated by a variant source identification system as part of identifying a source of a fault that contributes to a base interpretation error, in accordance with one or more embodiments of the present disclosure. FIG. 8 illustrates example allocable causal variation percentages of sequencing pipeline material contributing to insertion and deletion (INDEL) length variation in accordance with one or more embodiments of the present disclosure. Fig. 9A-9B illustrate an example series of graphical user interfaces including a notification graphical user interface from a variant source qualification system including a failure mode notification and error mode analysis graphical user interface in accordance with one or more embodiments of the present disclosure. FIG. 10 illustrates a series of actions for detecting a base interpretation error pattern from sequencing data of a sequencing pipeline and determining a source of a fault of a base interpretation error type based on the base interpretation error pattern, in accordance with one or more embodiments of the present disclosure. FIG. 11 illustrates a block diagram of an example computing device in accordance with one or more embodiments of the disclosure. Detailed Description The present disclosure describes one or more embodiments of a variant source identification system that identifies a base interpretation error pattern from sequencing data of a sequencing pipeline and determines a source of a fault based on the base interpretation error pattern. In one or more embodiments, the variant source identification system generates base reads of the reference genome to determine the base read error rate for each base. The mutation source identification system may also identify a base interpretation error pattern based on the base interpretation error rate. As a comparison point, the variant source identification system further identifies a sample base interpretation error pattern corresponding to the base interpretation error pattern. Based on the correlation between the base interpretation error pattern and the sample base interpretation error pattern, the variation source identification system can determine a source of failure of the variation within the sequencing data of the sequencing pipeline (e.g., based on the allocable cause variation percentage). To illustrate, in one or more embodiments, the variant source identification system determines a base interpretation error rate for nucleotide base interpretations generated by the sequencing pipeline that differ from reference bases in a reference genome. The mutation source identification system can detect a base interpretation error pattern from the base interpretation error rates grouped according to the base interpretation error types. In some embodiments, the variant source identification system identifies sample base interpretation error patterns for one or more sample sequencing runs that utilize one or more sequencing pipelines corresponding to the sequencing pipeline based on the base interpretation error patterns. The variant source identification system may further determine a source of the fault corresponding to the base interpretation error type of the sequencing pipeline based on a correlation between the base interpretation error pattern and the sample base interpretation error pattern. As mentioned, the variant source identification system can determine the base interpretation error rate for nucleotide base interpretation that differs from the reference base. Specifically, the mutation source identification system may utilize a reference genome having a known reference base sequence. In some embodiments, the variant source identification system utilizes a confusion matrix to indicate whether the base interpretation of the sequencing run is correct or incorrect. In addition, in one or more embodiments, the variant source identification system further normalizes the data from the confusion matrix. In any event, the variant source identification system can utilize the reference genome to accurately identify whether the base interpretation generated by the sequencing pipeline is correct or incorrect. The mutation source identification system may further detect a base interpretation error pattern from the base interpretation error rates grouped according to the base interpretation error types. Specifically, the variant source identification system can identify the type of base interpretation error that is indicative of correct base interpretation and incorrect base interpretation. For example, the variant source identification system can determine the number of times that a correct guanine (G) base interpretation was incorrectly identified as an incorrect adenosine (a) base interpretation. Furthermore, in some embodiments, the variant source identification system may generate a more detailed pattern of base interpretation errors by grouping based on base interpretation of different adjacent nucleotide base pairs that are incorrect. For example, the variant source identification system can determine when a G base interpretation is incorrectly interpreted as a when both sides flank the a nucleotide instead of a and cytosine (C). In general, the variant source identification system can generate a base interpretation error pattern comprising a set of base interpretation error types and different adjacent nucleotide bases. Based on the base interpretation error pattern of the sequencing data from the sequencing pipeline, the variant source identification system may further identify sample base interpretation error patterns for one or more sample sequencing runs that utilize one or more sequencing pipelines corresponding to the sequencing pipeline. Generally, the variant source identification system utilizes statistical models, such as analysis of Variance (VCA), to analyze sample sequencing run and manufacturing data to estimate variability of various factors. In one example, the variant source identification system may define a set of sample sequencing runs utilizing similar manufacturing materials based on manufacturing identification data. The variation source identification system detects sample base interpretation error patterns for a sample sequencing run set and utilizes a statistical model to determine allocable cause variations in sequencing pipeline materials, chemistry, or software that contribute to sample base interpretation errors. Based on the correlation between the base interpretation error pattern of the data from the sequencing pipeline and the sample base interpretation error pattern from the sample sequencing run, the variant source identification system can further determine the source of the fault of the base interpretation error type. As mentioned, in some cases, the variant source identification system utilizes statistical models to estimate the impact of hardware, chemistry, and software on sequencing run data. By identifying the sample base interpretation error pattern corresponding to the base interpretation error pattern, the variant source identification system can determine the source of the fault of the base interpretation error type. In one or more embodiments, after identifying the source of the fault, the variant source identification system provides a notification indicating the source of the fault for display on a computing device associated with the sequencing pipeline. For example, the variant source identification system may provide a notification indicating one or more sources of failure that negatively impact sequencing operations. The variant source identification system may also provide a resolution of potential fault sources via the notification, as well as the probability that these potential fault sources negatively impact sequencing operations. The variant source identification system provides several technical benefits over existing sequencing systems. In particular, the variant source identification system may increase the accuracy of detecting systematic error sources relative to existing sequencing systems. More specifically, the variant source identification system uses the base interpretation error rate of the reference genome to infer a specific source of failure that negatively affects sequencing operations. In contrast to existing systems that rely on the Phred algorithm to determine a quality score that estimates the likelihood of single base interpretation incorrectly, the variant source identification system can accurately identify systematic sources of error originating in various parts along the sequencing pipeline. For example, the variant source identification system may identify the source of the fault in the machine, reagent, chemistry, or software. In addition, in contrast to conventional error correction tools that introduce new errors in nucleotide sequences, the variant source identification system does not negatively impact read length or coverage bias when analyzing base interpretation data. Compared with the existing sequencing system, the mutation source identification system can also improve the efficiency of detecting the sequencing failure source. By utilizing sequencing base interpretation data to effectively identify the source of the fault, the variant source identification system eliminates the need to run and re-run multiple sequencing cycles to obtain high quality data, thereby using chemical reagents more effectively than existing sequencing systems. In some embodiments, the variant source qualification system may also improve efficiency by providing notification of potential sources of failure (e.g., graphical indication of error codes) in real time. For example, while many existing systems rely on algorithms (such as the louvia community detection algorithm) to generate similarity scores between individual read pairs within a given segment, the variant source identification system can examine the base interpretation data of the entire nucleotide sequence to accurately identify the source of the fault. Thus, unlike many existing systems that require excessive computing resources to identify and correct sequencing errors, the variant source identification system can provide an efficient interface for identifying and correcting potential sources of failure. By providing timely notification of the source of the fault, the variant source identification system can correspondingly reduce the amount of reagent wasted in identifying the wrong sequencing run and troubleshoot (and correct) the source of the fault within the sequencing pipeline. In the event that the source of the failure of the base interpretation error pattern is identified, the variant source identification system can target the process of raw materials and repairing or improving raw materials for future production. Similarly, the variant source identification system may end a sequencing cycle or sequencing run early to correct the identified source of failure, thereby preserving reagents of the current cycle or run. Once the source of the fault has been remedied for the sequencing pipeline, the sequencing system that uses the remedied sequencing pipeline to determine the sample genome (or other nucleic acid polymer) sequence can improve the base interpretation error rate in previous sequencing runs. The variant source identification system can also improve the base interpretation error rate and the accuracy of predicting the source of the fault in future sequencing runs by identifying new base interpretation error patterns in both manufacturing data and in-situ data. In addition to improving accuracy and efficiency, the variant source identification system provides increased flexibility over existing sequencing systems. In some embodiments, unlike conventional in-machine sensors, the variant source identification system is platform independent and does not require the use of additional hardware. In particular, the variant source identification system flexibly exploits the base interpretation error rate of a sequenced reference genome that is readily available to many sequencing platforms. Furthermore, the variant source identification system is not limited to a single reference genome, but rather the variant source identification system can flexibly utilize sequencing from any known reference genome to generate a pattern of base interpretation errors for sequencing runs. Thus, the variant source identification system can be implemented and utilized by existing sequencing systems without the need for additional hardware. As demonstrated by the above discussion, the present disclosure utilizes various terms to describe features and advantages of a variant source identification system. Additional details concerning the meaning of such terms are now provided. For example, as used herein, the term 'base interpretation error rate' refers to an indication of the score, frequency, percentage, or other portion of determining incorrect nucleotide base interpretation. In particular, the base interpretation error rate may indicate the fraction, frequency, or percentage of nucleotide base interpretations generated by the sequencing pipeline that differ from reference bases in the reference genome. In one example, the base interpretation error rate includes a count of instances in which the sequencing pipeline generated an incorrect nucleotide base interpretation (e.g., incorrectly interpreted an adenine base as a guanine base). As used herein, the term 'nucleotide base interpretation' (or simply 'base interpretation') refers to determining or predicting the genomic coordinates of a sample genome or a particular nucleotide base (or nucleotide base pair) of an oligonucleotide during a sequencing cycle. Specifically, nucleotide base interpretation may indicate: (i) Determining or predicting the type of nucleotide base that has been incorporated into an oligonucleotide on a nucleotide sample slide (e.g., based on nucleotide base reads) or (ii) determining or predicting the type of nucleotide base present at genomic coordinates or regions within the genome, including variant or non-variant reads in a digital output file. In some cases, for nucleotide fragment reads, nucleotide base interpretation includes determining or predicting a nucleotide base based on an intensity value generated by a fluorescent tagged nucleotide in an oligonucleotide added to a nucleotide sample slide (e.g., in a well of a flow cell). Alternatively, nucleotide base interpretation includes determining or predicting the nucleotide base from chromatographic peaks or amperometric changes that result from nucleotides passing through a nanopore of a nucleotide sample slide. In contrast, nucleotide base reads can also include final predictions of nucleotide bases at genomic coordinates of a sample genome of a variant read file or other base read output file based on nucleotide fragment reads corresponding to genomic coordinates. Thus, nucleotide base detection may include base detection corresponding to the genomic coordinates and the reference genome, such as an indication of a variant or non-variant at a particular location corresponding to the reference genome. In practice, nucleotide base detection may refer to variant detection, including but not limited to Single Nucleotide Polymorphisms (SNPs), insertions or deletions (indels), or base detection as part of a structural variant. As set forth above, the single nucleotide base reads may be adenine (a) reads, cytosine (C) reads, guanine (G) reads, or thymine (T) reads. As used herein, the term 'source of failure' refers to the cause of a given base interpretation error, the rate of base interpretation errors, or the type of base interpretation error. In particular, the source of failure refers to a particular problem found at various components within a sequencing pipeline that negatively affects nucleotide base interpretation. For example, sources of failure may include problems or difficulties affecting hardware, chemistry, or software, resulting in errors (such as nucleotide bases being misinterpreted). Examples of sources of faults found in hardware may include defective portions of a sequencing machine, and consumable products that degrade or otherwise are defective. Examples of sources of faults found in chemistry may include the following consumable products: which is negatively affected when interacting with other consumable products, the environment or sequencing machine components. Sources of faults found in software may include computational errors or other irregularities that originate from computational processes utilized within a sequencing pipeline. As used herein, the term 'reference genome' refers to a digital nucleic acid sequence assembled as a representative example (or representative examples) of an organism's genes. Regardless of sequence length, in some cases, a reference genome represents an example set of genes or nucleic acid sequences in a digital nucleic acid sequence that are determined by a scientist or statistical model to be representative of an organism of a particular species. For example, the reference genome may comprise the PhiX genome. As a further example, the linear human reference genome may be GRCh38 or other reference genome version from the genome reference alliance. The reference genome consists of a known sequence of reference bases. As used herein, the term 'reference base' refers to the nucleotide bases that make up the reference genome. Specifically, the sequence of the reference base can be used as a control for the sequencing run. As used herein, the term 'sequencing pipeline' refers to various physical elements and software used to determine the sequence of a nucleic acid polymer or the entire genome. In particular, the sequencing pipeline may comprise a nucleic acid sequence extraction method, as well as corresponding reagents and corresponding equipment for the extraction. Sequencing equipment and corresponding reagents, equipment and/or reactions utilized in sequencing runs; sequence analysis software. For example, a sequencing pipeline may include a particular model of a sequencing device, and the corresponding reagents utilized by the sequencing device in a series of events to generate a nucleotide base sequence. As used herein, the term 'similar fabrication materials' refers to materials utilized in one or more sequencing pipelines that have common characteristics. In particular, similar manufacturing materials may include two materials of the same type or of the same or overlapping crates or manufacturing identifiers that also have shared characteristics. As will be described below, in some cases, the variant source identification system truncates manufacturing identification data for sequencing equipment, sequencing equipment components, consumable products, nucleotide sample slides, and other materials to identify similar manufacturing materials. Thus, similar manufacturing materials may include sequencing equipment components, consumable products, nucleotide sample slides, and other materials that are identical or similar in composition or construction. In some embodiments, similar manufacturing materials may include two reagents of the same type, both reagents using the same raw materials, produced simultaneously by the same process. As used herein, the term 'base misinterpretation pattern' refers to a characteristic or unique combination of base misinterpretation. In particular, the pattern of base interpretation errors may include a signature or unique series of various base interpretation errors running across one or more sequencing runs. For example, a base interpretation error pattern may refer to a signature that indicates the amount of base interpretation errors for each base interpretation error type that is run across one or more sequencing runs. Furthermore, the pattern of base interpretation errors may include a pattern that indicates the amount of a particular type of base interpretation error (e.g., incorrectly interpreting a instead of T) according to different adjacent nucleotide base organization. As further used herein, the term 'sample sequencing run' refers to a nucleotide sequencing run having known variables from a sequencing pipeline. Specifically, the sample sequencing run generates sample sequencing data by utilizing known manufacturing data for one or more sequencing pipelines. In some embodiments, the sample sequencing run comprises a test sequencing run that utilizes manufacturing materials with known manufacturing identification data. For example, a sample sequencing run may comprise a quality test run using a nucleic acid sequence extraction method, a sequencing apparatus or sequence analysis software to ensure that the nucleic acid sequence extraction method, the sequencing apparatus or the sequence analysis software passes corresponding quality criteria. Similarly, as used herein, the term 'sample base interpretation error pattern' refers to a characteristic or unique combination of base interpretation errors that exist within one or more sample sequencing runs. In particular, a sample base interpretation error pattern may refer to a characteristic map or unique series of base interpretation errors generated by a sequencing pipeline during a sample sequencing run. In one example, when the sequencing equipment or sequence analysis software is analyzing sample data, the sample base interpretation error pattern indicates the amount of various base interpretation errors. As used herein, the term 'base interpretation error type' refers to the class of base interpretation errors. In particular, the type of base interpretation error indicates the specific erroneous base interpretation determined, rather than the correct base interpretation. For example, the type of base interpretation error may include an A base (e.g., where the correct base interpretation is A) being incorrectly interpreted as G by the sequencing system. In contrast, a different base interpretation error type may include an A base being incorrectly interpreted as a T by the sequencing system. In one example, the type of base interpretation error is determined by comparing the known sequence of the reference base to the nucleotide base interpretation. Additional details will now be provided regarding the variant source identification system in relation to the illustrative figures depicting exemplary embodiments and implementations of the variant source identification system. For example, FIG. 1 illustrates a schematic diagram of a system environment (or 'environment') 100 in which a variant source identification system 106 operates according to one or more embodiments. As shown, the environment 100 includes one or more server devices 102 connected to user client devices 108 and sequencing devices 114 via a network 112. While fig. 1 shows one embodiment of a variant source identification system 106, alternative embodiments and configurations are possible. As further shown in fig. 1, the server device 102, the user client device 108, and the sequencing device 114 are connected via a network 112. Each component of environment 100 may communicate via network 112. Network 112 includes any suitable network over which computing devices may communicate. An example network is discussed in more detail below in conjunction with fig. 11. As shown in fig. 1, environment 100 includes a sequencing device 114. Sequencing device 114 includes a device for sequencing a nucleic acid polymer or the entire genome. In some embodiments, the sequencing device 114 analyzes the samples to generate data directly or indirectly on the sequencing device 114 using the computer-implemented methods and systems described herein. In one or more embodiments, sequencing apparatus 114 utilizes sequencing-by-synthesis (SBS) to sequence nucleic acid polymers. As shown, in some embodiments, the sequencing device 114 bypasses the network 112 and communicates directly with the user client device 108. As further depicted in fig. 1, environment 100 includes a server device 102. The server device 102 can generate, receive, analyze, store, receive, and transmit electronic data, such as data for sequencing nucleic acid polymers. The server device 102 may receive data from the sequencing device 114. For example, the server device 102 can collect and/or receive sequencing data, including nucleotide base interpretation data, quality data, and other data related to sequencing nucleic acid polymers. The server device 102 may also be in communication with a user client device 108. In particular, the server device 102 may send nucleic acid polymer sequences, error data, and other information to the user client device 108. In some embodiments, server device 102 comprises a distributed server, where server device 102 comprises a number of server devices distributed across network 112 and located in different physical locations. The server device 102 may include a content server, an application server, a communication server, a network hosting server, or another type of server. As further shown in fig. 1, the server device 102 may include a sequencing system 104. Generally, the sequencing system 104 analyzes sequencing data received from the sequencing device 114 to determine the nucleotide sequence of the nucleic acid polymer. For example, the sequencing system 104 can receive raw data (e.g., base interpretation data for nucleotide fragment reads) from the sequencing device 114 and determine the nucleic acid sequence of the sample. To illustrate, the sequencing system 104 may receive nucleotide fragment reads from the sequencing device 114, and then the sequencing system 104 generates nucleotide base reads for the genome from these nucleotide fragment reads. In some embodiments, the sequencing system 104 determines the sequence of nucleobases in DNA and/or RNA. In addition to processing and determining the sequence of the nucleic acid polymer, the sequencing system 104 also analyzes the sequencing data to detect irregularities in the sequencing cycle alone or in multiple sequencing cycles. For example, the sequencing system 104 can detect base interpretation errors within a sequencing run by comparing nucleotide base interpretation of a reference genome to known reference bases of the reference genome. As shown in fig. 1, the sequencing system 104 includes a variant source identification system 106. Generally, the variant source identification system 106 analyzes data from the sequencing device 114 to determine a source of sequencing operations failure associated with the sequencing device 114. More specifically, in some embodiments, the variant source identification system 106 determines a base interpretation error rate for nucleotide base interpretations generated by the sequencing pipeline that differ from reference bases in the reference genome. The variant source identification system 106 may further detect a base interpretation error pattern from the base interpretation error rates grouped according to base interpretation error types. Based on these base interpretation error patterns, the variant source identification system 106 can identify sample base interpretation error patterns for one or more sample sequencing runs that utilize one or more sequencing pipelines corresponding to the sequencing pipeline. Based on the correlation between the base interpretation error pattern and the sample base interpretation error pattern, the variant source identification system 106 can determine a source of failure corresponding to the base interpretation error type of the sequencing pipeline. The environment 100 illustrated in fig. 1 also includes a user client device 108. The user client device 108 may generate, store, receive, and transmit digital data. In particular, the user client device 108 may receive sequencing data from the sequencing device 114. In addition, the user client device 108 may communicate with the server device 102 to receive nucleotide base interpretation, nucleotide sequence, and reports of irregularities within sequencing runs, such as notifications indicating potential sources of failure of errors in the nucleotide base interpretation. The user client device 108 may present the sequencing data and a notification of the source of the fault to a user associated with the user client device 108. The user client devices 108 shown in fig. 1 may include various types of client devices. For example, in some embodiments, the user client device 108 comprises a non-mobile device, such as a desktop computer or server, or other type of client device. In still other embodiments, the user client device 108 comprises a mobile device, such as a laptop computer, tablet computer, mobile phone, smart phone, or the like. Additional details regarding user client device 108 are discussed below with respect to fig. 11. As further shown in fig. 1, the user client device 108 includes a sequencing application 110. The sequencing application 110 may be a web application or a native application (e.g., a mobile application, a desktop application, etc.) on the user client device 108. The sequencing application 110 may include instructions that (when executed) cause the user client device 108 to receive data from the variant source qualification system 106 and present sequencing data. Further, the sequencing application 110 may include instructions that (when executed) cause the user client device 108 to provide a notification indicating a potential source of failure affecting the sequencing run. As further shown in fig. 1, the variant source identification system 106 may be located on the user client device 108 as part of the sequencing application 110. As shown, in some implementations, the variant source qualification system 106 is implemented by being located (e.g., entirely or partially) on the user client device 108. In still other embodiments, the variant source identification system 106 is implemented by one or more other components of the environment 100. In particular, the variant source qualification system 106 can be implemented across the server device 102, the user client device 108, and the sequencing device 114 in a number of different ways. Although fig. 1 illustrates components of environment 100 communicating via network 112, in some embodiments, the components of environment 100 communicate directly with each other around the network. For example, and as previously described, the user client device 108 may communicate directly with the sequencing device 114. In addition, the user client device 108 may bypass the network 112 to communicate directly with the variant source qualification system 106. In addition, the variant source qualification system 106 can access one or more databases housed on the server device 102 or elsewhere in the environment 100. As mentioned previously, the variant source identification system 106 may determine the source of the fault corresponding to the base interpretation error type of the sequencing pipeline. The following figures and paragraphs provide additional details regarding how the variant source qualification system 106 determines one or more sources of failure according to some embodiments. FIG. 2 and the corresponding paragraphs provide a general overview of the actions performed by the variant source qualification system 106 as part of determining a source of a fault in accordance with one or more embodiments. As shown in fig. 2, the variant source identification system 106 determines incorrect base calls, as well as base call error patterns based on the combined incorrect base calls. The variant source identification system 106 further compares the base interpretation error pattern to the sample base interpretation error pattern to identify a corresponding sample base interpretation error pattern. Based on the corresponding sample base interpretation error pattern, the variant source identification system 106 can determine the source of the fault. As shown in fig. 2, series of acts 200 include an act 202 of determining a base interpretation error rate. Specifically, the variant source identification system 106 determines the base interpretation error rate of nucleotide base interpretation generated by the sequencing pipeline that differs from a reference base in the reference genome. Generally, the variant source identification system 106 determines the error rate of nucleotide base reads generated by the sequencing pipeline that differ from known reference bases of the reference genome. In some embodiments, the variant source identification system 106 compares nucleotide base reads of the reference genome (as determined by sequencing pipeline reads from nucleotide fragments) to reference bases of the reference genome. Based on the comparison of the nucleotide base reads to the reference base, the variant source identification system 106 identifies both incorrect nucleotide base reads and correct nucleotide base reads generated by the sequencing pipeline. For example, as illustrated in fig. 2, the variant source identification system 106 may determine that the sequencing system erroneously generated an incorrect nucleotide base interpretation T instead of the correct nucleotide base interpretation a representing the reference base. The variant source identification system 106 further determines the error rate of incorrect base interpretation. In some embodiments, the variant source identification system 106 determines the number of instances in the sequencing pipeline in which the sequencing system generated an incorrect nucleotide base interpretation. For example, as shown in fig. 2, the variant source identification system 106 determines that the sequencing pipeline correctly predicted nucleotide base interpretation a in 6798 examples. In contrast, the sequencing pipeline incorrectly interprets an a base as T in 349 instances, incorrectly interpreted an a base as C in 112 instances, and incorrectly interpreted an a base as G in 103 instances. As set forth above, in some embodiments, the variant source identification system 106 further determines a normalized base interpretation error rate to normalize the base interpretation error rate. Although FIG. 2 shows incorrect nucleotide base interpretation of A bases, the variant source identification system 106 determines the base interpretation error rate for all bases within the nucleotide sequence. FIG. 3 and the corresponding paragraphs provide additional details regarding determining a base interpretation error rate in accordance with one or more embodiments. As further shown in fig. 2, the variant source identification system 106 performs an act 204 of detecting one or more base interpretation error patterns from the base interpretation error rate. Generally, the variant source identification system 106 groups the base interpretation error rates and then determines the base interpretation error pattern based on the base interpretation error rates of these groups. In some embodiments, for example, the variant source identification system 106 simply groups the base interpretation error patterns according to the base interpretation error type. For example, the variant source identification system 106 may assign an incorrect nucleotide base interpretation T instead of a (e.g., a- > T) as a single base interpretation error type. In addition, or alternatively, the variant source identification system 106 groups the base interpretation error rates by different adjacent nucleotide bases. To illustrate, for base interpretation error types a- > T, the variant source identification system 106 can further distinguish between these groupings based on adjacent nucleotide bases. For example, an A- > T base interpretation error type can flank A and A (i.e., A_A). FIG. 2 shows a three-dimensional chart representing a pattern of base interpretation errors for a sequencing pipeline. The three-dimensional graph represents the base interpretation error rate grouped by both base interpretation error type and adjacent nucleotide bases. As described further below, FIG. 4 and the corresponding discussion provide additional details regarding detecting a base interpretation error pattern in accordance with one or more embodiments. FIG. 2 also shows an act 206 of the variant source identification system 106 performing identification of one or more sample base interpretation error patterns for one or more sample sequencing runs. In general, the variant source identification system 106 identifies sample base interpretation error patterns that fall within a range having a threshold similarity to the base interpretation error patterns. Specifically, the variant source identification system 106 generates a sample base interpretation error pattern using a sample sequencing run. The variance source identification system 106 further utilizes statistical methods and manufacturing data associated with the sample sequencing runs to determine the source of failure of the variance within the sequencing runs. For example, as shown in fig. 2, the variant source identification system 106 determines that the sample base interpretation error pattern 212 is within a threshold similarity of the base interpretation error pattern 210. As part of the series of actions 200 shown in FIG. 2, the variant source qualification system 106 performs an action 208 of determining the source of the fault. Based on the correlation between the base interpretation error pattern and the sample base interpretation error pattern, the variant source identification system 106 determines a source of failure corresponding to the base interpretation error type of the sequencing pipeline. In some embodiments, the variant source identification system 106 utilizes a statistical model to determine contribution metrics that indicate the probability that sequencing pipeline material contributes to a base interpretation error from the sequencing pipeline. The variant source identification system 106 may further determine the source of the fault of the base interpretation error type based on these contribution metrics. As one example of such a statistical model, in some embodiments, variance component model is utilized by variance component system 106 to determine assignable causal variations in sequencing pipeline material that contribute to base interpretation errors of the sequencing pipeline. Fig. 6A-6C and corresponding paragraphs provide additional details regarding the variant source identification system 106 determining the source of the fault corresponding to the base interpretation error type of the sequencing pipeline. FIG. 2 provides a general overview of the actions performed by the variant source qualification system 106 to determine one or more sources of failure corresponding to a sequencing pipeline. The following figures and paragraphs provide additional details regarding a number of acts within the series of acts illustrated in fig. 2. For example, FIG. 3 and the corresponding paragraphs provide additional details regarding the variant source identification system 106 determining the base interpretation error rate in accordance with one or more embodiments. As shown in fig. 3, the variant source identification system 106 utilizes the sequencing apparatus 306 to generate a nucleotide fragment read 308 of the reference genome 302. The variant source identification system 106 further utilizes a sequencing system 310 (e.g., sequencing system 104) to generate nucleotide base reads 312 based on the nucleotide fragment reads 308. The variant source identification system 106 generates and uses the confusion matrix 314 to compare the nucleotide base interpretation 312 to the reference base 304 of the reference genome 302. The variant source qualification system 106 further processes the confusion matrix data 320 output by the confusion matrix 314 by performing an act 322 of normalizing the error rate to generate a normalized error rate 324. As further shown in fig. 3, the variant source identification system 106 utilizes a reference genome 302 that includes a reference base 304 to generate a nucleotide base interpretation 312. Generally, the reference genome 302 comprises a known sequence of reference bases 304. The variant source identification system 106 uses the reference genome 302 as a control by which to measure the accuracy of nucleotide base interpretation. For example, in some embodiments, the reference genome 302 comprises a PhiX genome. PhiX is an icosahedral tailless phage with single stranded DNA. In some embodiments, the variant source identification system 106 utilizes other control genomes as the reference genome 302. For example, the reference genome 302 may comprise spike genomic DNA, or a mutant sequence that exhibits or mimics mutagenesis. As further shown in fig. 3, the variant source identification system 106 utilizes the sequencing apparatus 306 and the sequencing system 310 to generate a nucleotide base interpretation 312 of the reference genome 302. Generally, the sequencing device 306 generates nucleotide fragment reads 308 that indicate sequences from various fragments within the reference genome 302. The sequencing system 310 compares the nucleotide fragment reads 308 to the reference genome 302 to generate nucleotide base reads 312. Because nucleotide fragment read 308 may include an incorrect nucleotide base interpretation, nucleotide fragment read 308 may not be well aligned with reference genome 302. For example, multiple nucleotide base reads from nucleotide fragment reads 308 may not match the reference genome 302, thus resulting in a map quality metric below a threshold metric (e.g., below a relative MAPQ score or below MAPQ 40). Similarly, because the sequencing device 306 or other portion of the sequencing pipeline includes defective portions, reagents, or software, the sequencing system 104 may generate incorrect nucleotide base reads as part of the nucleotide base reads 312. As further shown in fig. 3, the variant source identification system 106 utilizes the confusion matrix 314 to detect errors within the nucleotide base interpretation 312. Generally, the confusion matrix 314 evaluates the performance of the sequencing device 306 and the sequencing system 310. In some implementations, the confusion matrix 314 includes a table as shown in fig. 3. The table includes different categories for predicted base interpretation 316 and actual base 318. Predicted base interpretation 316 represents the base interpretation from nucleotide base interpretation 312. Actual base 318 represents known reference base 304. The variant source identification system 106 utilizes the confusion matrix 314 by generating a count for each instance in which the sequencing pipeline correctly predicts nucleotide-base interpretation. The variant source identification system 106 also utilizes the confusion matrix 314 to provide details regarding incorrect nucleotide base interpretation. For example, the variant source identification system 106 may utilize the confusion matrix 314 to indicate actual bases and incorrect nucleotide base interpretations. For example, the variant source identification system 106 uses the confusion matrix 314 to determine a single instance in which the sequencing pipeline determines an incorrect C base interpretation for the actual a base. As set forth above, the variant source qualification system 106 utilizes the confusion matrix 314 to generate confusion matrix data 320. The confusion matrix data 320 indicates the number of instances in which the sequencing pipeline generates correct and incorrect nucleotide base interpretations. The numbers in the confusion matrix 314 indicate the number of instances that the sequencing system 310 generates a correct or incorrect nucleotide base interpretation. For example, the confusion matrix 314 indicates that the sequencing system 310 correctly identified an a base in 87 instances, a T base in 88 instances, a G base in 85 instances, and a C base in 79 instances. In contrast, the variant source identification system 106 uses the confusion matrix 314 to determine that for the actual base T, the sequencing system 310 generated an incorrect a base interpretation in three instances. Similarly, the variant source identification system 106 identifies one a- > C interpretation, one T- > G interpretation, two G- > C interpretations, and four C- > T interpretations. The confusion matrix data 320 shown in fig. 3 includes confusion matrix data specific to the actual a bases. In some implementations, as shown in fig. 3, the variant source qualification system 106 performs an act 322 of normalizing the error rate. By performing act 322, the variant source identification system 106 can accurately compare the results of one sequencing run with the results of another sequencing run, regardless of the number of nucleotide base reads. The variant source qualification system 106 may utilize different normalization methods to perform act 322. For example, in some embodiments, the variant source identification system 106 performs act 322 by dividing the number of specific error instances by the number of corresponding correct nucleotide base interpretation instances. To illustrate this normalization, the variant source identification system 106 shown in fig. 3 calculates the normalized error percentage by dividing the number of a- > C error interpretation instances by the number of a- > a correct interpretation instances. In this example, the variant source qualification system 106 divides 1 (a- > C error) by 87 (a- > a correctly interpreted). In other embodiments, the variant source qualification system 106 performs the act 322 of normalizing the error rate using different normalization methods, such as scaling to a range, logarithmic scaling, and other methods. Fig. 3 further illustrates a normalized error rate 324. The variant source identification system 106 normalizes each particular error according to the method described above. Generally, as shown in fig. 3, error rates within a sequencing cycle tend to be nucleotide specific. The variant source identification system 106 considers the nucleotide specificity of the error rate by determining a normalized error rate based on the actual nucleotide base and the incorrect nucleotide base. For example, as shown in fig. 3, a- > T errors contribute more to the overall error rate than other base interpretation error types. Furthermore, in some embodiments, the variant source identification system 106 normalizes the error rate for each sequencing cycle. The graph shown in fig. 3 shows the normalized error rate for each base interpretation error type over all sequencing cycles. For example, the variant source identification system 106 determines that between sequencing cycles 150 and 200, the a- > T base interpretation error type increases significantly. FIG. 3 and the corresponding paragraphs describe the variant source identification system 106 determining the base interpretation error rate by generating a normalized error rate according to one or more embodiments. As previously mentioned, the variant source identification system 106 may further detect a base interpretation error pattern from the base interpretation error rates grouped according to base interpretation error types. FIG. 4 and the corresponding discussion provide additional details regarding the detection of base interpretation error patterns by the variant source identification system 106, according to one or more embodiments. As shown in fig. 4, the variant source identification system 106 determines the base interpretation error type and adjacent nucleotide bases for each incorrect nucleotide base interpretation. The variant source identification system 106 further groups incorrect nucleotide base interpretations according to adjacent nucleotide bases and base interpretation error types, and then detects base interpretation error patterns based on the grouped incorrect nucleotide base interpretations. As shown in fig. 4, series of actions 400 includes an action 402 of determining a base interpretation error rate based on base interpretation error type and different adjacent nucleotide base groupings. As previously mentioned, a particular base interpretation error type, such as A- > T, may contribute more to the overall error rate than other base interpretation error types. Furthermore, while confusion matrix data may show that a particular base interpretation error type has a higher error rate, flanking nucleotides may also contribute primarily to the overall error rate. Generally, the variant source identification system 106 determines a set of base interpretation error rates, and then determines a base interpretation error pattern based on the determined set. As previously mentioned, the type of base interpretation error may include a specific type of determining an incorrect nucleotide base interpretation, rather than a canonical type of correct nucleotide base interpretation. For example, the variant source identification system 106 determines that the base interpretation error type is A- > T, indicating that for the actual base A, the incorrect nucleotide base is interpreted as T. The variant source identification system 106 determines the type of base interpretation error for each incorrect nucleotide base and then groups the base interpretation error rates according to the type of base interpretation error. In addition, or alternatively, the variant source identification system 106 groups based on different adjacent nucleotide base pair base interpretation error rates. Specifically, the variant source identification system 106 determines a set of each combination of possible flanking upstream and downstream nucleotide bases. In some embodiments, the variant source identification system 106 determines the sets based on a single upstream adjacent nucleotide base and a single downstream adjacent nucleotide base. For example, as illustrated in fig. 4, the variant source identification system 106 may determine a set that includes incorrect nucleotide base reads flanking an upstream T and a downstream T (i.e., t_t). In one example, the variant source identification system 106 determines the sets based on adjacent nucleotide bases independent of base interpretation error type. In other embodiments, the variant source identification system 106 determines these groups based on a combination of both base misinterpretation types and adjacent nucleotide bases. To illustrate, the variant source identification system 106 may assign base misinterpretation rates for particular base misinterpretation types to the groups based on adjacent nucleotide bases. For example, the variant source identification system 106 groups based on the base misinterpretation rates of adjacent nucleotide base pairs A- > T base misinterpretation types. By grouping the base interpretation error rates according to both the base interpretation error type and the different adjacent nucleotide bases, the variant source identification system 106 generates a more detailed set of base interpretation error rates. While FIG. 4 illustrates grouping based on the base interpretation error rate of two adjacent nucleotide bases (one upstream base and one downstream base), the variation source identification system 106 may group based on more adjacent nucleotide base pair base interpretation error rates. For example, the variant source identification system 106 can delineate more groups by considering four adjacent nucleotide bases (e.g., two upstream bases and two downstream bases), six adjacent nucleotide bases (e.g., three upstream bases and three downstream bases), or more adjacent nucleotide bases. As further shown in fig. 4, the variant source identification system 106 performs an act 404 of detecting a base interpretation error pattern from the base interpretation error rate of the packet. Generally, a base interpretation error pattern comprises a set of normalized nucleotide-specific errors that move or occur together. More specifically, the variant source identification system 106 tracks which groups of base interpretation error rates increase in agreement with each other. For example, in one or more embodiments, the variant source identification system 106 simply uses the normalized error rate, grouped by base interpretation error type and/or adjacent nucleotide bases, as the base interpretation error pattern. The three-dimensional graph shown in fig. 4 represents an exemplary base interpretation error pattern. As shown, the variant source identification system 106 identifies a greater number of base interpretation error rates or Single Nucleotide Variants (SNVs) in the C- > a packets flanking t_a, and in the a- > C packets flanking c_t. In some embodiments, the variant source identification system 106 determines a threshold error value for counting the base interpretation error rate as part of the base interpretation error pattern. Generally, sequencing runs are affected by baseline errors. In some examples, the variant source identification system 106 determines to ignore baseline errors in the detection of its base interpretation error pattern by utilizing a threshold error value. Specifically, in some embodiments, the variant source qualification system 106 utilizes the expected baseline error to determine the threshold error value. The variance source identification system 106 determines an expected baseline error based on user input by utilizing quality data from a sequencing system or other error prediction methods. In one or more examples, the variance source identification system 106 determines the threshold error value by determining a magnification of the expected baseline error. For example, in at least one embodiment, the variant source identification system 106 determines that the threshold error value is 2 times the expected baseline error. In some embodiments, the variant source identification system 106 utilizes the same threshold error value over all groups of base interpretation error rates. For example, the variance source identification system 106 determines that the expected baseline error rate is 0.1% and thus sets the threshold error value to 0.2% error rate. Thus, when a base interpretation error pattern is detected, the variant source identification system 106 ignores base interpretation error rates below 0.2%. In some embodiments, the variant source identification system 106 utilizes expected baseline errors for different magnification as the threshold error value. For example, the variant source identification system 106 may amplify the expected baseline error by 2.5 times, 3 times, etc., to determine the threshold error value. In some embodiments, the variant source identification system 106 predetermines the expected baseline error rate based on historical sequencing runs for sequencing a reference genome (such as PhiX). In some embodiments, the variant source identification system 106 determines a plurality of threshold error rates corresponding to each set of base interpretation error rates. The variant source identification system 106 determines the expected baseline error for each set of base interpretation error rates. For example, the variant source identification system 106 may determine expected baseline errors for each base interpretation error type. In addition, or alternatively, the variant source identification system 106 can determine expected baseline errors for different adjacent nucleotide bases. To illustrate, the variant source identification system 106 may determine that the baseline error rate for a- > T is equal to 0.1% and the baseline error rate for T- > C is equal to 0.05%. Thus, the variant source identification system 106 determines that the threshold error value for A- > T is equal to 0.2% (0.1%. Times.2) and the threshold error value for T- > C is equal to 0.1% (0.05%. Times.2). As mentioned, the variant source identification system 106 may determine additional threshold error values for adjacent nucleotide base groups or combinations of base interpretation error types and adjacent nucleotide bases. FIG. 4 shows a variant source identification system 106 detecting a base interpretation error pattern according to one or more embodiments. As mentioned, the variant source identification system 106 identifies a sample base interpretation error pattern that correlates with the base interpretation error pattern. The sample base interpretation error pattern is from a sample sequencing run with known manufacturing data. In some embodiments, by analyzing sample sequencing operations and manufacturing data, the variant source identification system 106 may predict a source of failure corresponding to a sample sequencing operation. FIG. 5 and the corresponding discussion describe the variant source identification system 106 identifying sample base interpretation error patterns for one or more sample sequencing runs in accordance with one or more embodiments. As shown in fig. 5, the variant source identification system 106 performs an act 500 of identifying sample base interpretation error patterns for one or more sample sequencing runs. In particular, the variant source identification system 106 identifies sample base interpretation error patterns for one or more sample sequencing runs that utilize one or more sequencing pipelines corresponding to the sequencing pipeline. More specifically, the variant source identification system 106 searches for sample base interpretation error patterns corresponding to a particular sequencing pipeline. For example, if the variant source identification system 106 determines that the base interpretation error rate is generated by the first sample sequencing pipeline using model x of the sequencing equipment and series y of consumable products, the variant source identification system 106 identifies one or more sample base interpretation error patterns from the sample sequencing run using model x (or similar model) of the sequencing equipment and series y (or similar model) of consumable products. To illustrate, to identify such sample base interpretation error patterns, the variant source identification system 106 performs a series of actions including an action 508 of classifying a sample sequencing run set utilizing similar manufacturing materials, an action 510 of detecting different sample base interpretation error patterns of the sample sequencing run set, and an action 512 of identifying sample base interpretation error patterns based on a correlation between the base interpretation error patterns and the sample base interpretation error patterns. Fig. 5 shows that the variant source identification system 106 performs an act 508 of classifying a sample sequencing run set utilizing similarly manufactured materials. Generally, as part of identifying sources of faults within a sample sequencing run, the variant source identification system 106 defines a collection of sample sequencing runs with similar manufacturing materials. As mentioned, the variant source identification system 106 may identify various types of sources of faults within the sequencing pipeline, including hardware, chemistry, and software. Hardware requires both equipment that makes up the sequencing apparatus and some consumables that the sequencing apparatus utilizes during sequencing, such as nucleotide sample slides (e.g., flow cells). Chemistry includes interactions between reagents, between reagents or between consumables and reagents, and between reagents and hardware components of a sequencing device. The software includes program and operational information utilized by the sequencing pipeline. For example, the software may include sequence analysis software, such as DRAGEN provided by Illumina, inc. In some embodiments, the variant source identification system 106 identifies a collection of sample sequencing runs that utilize similar consumables. For example, as shown in fig. 5, the variant source identification system 106 defines a set 502 of sample sequencing runs and a set 504 of sample sequencing runs. As shown, collection 502 includes a sample sequencing run with reagent a from lot 1, while collection 504 includes a sample sequencing run with reagent a from lot 2. Although fig. 5 shows the variant source identification system 106 classifying the sets based on reagents, the variant source identification system 106 may classify the sets based on sample sequencing runs using similar equipment or software. As part of classifying the sets, the variant source identification system may assign a single sample sequencing run to several sets. For example, the variant source identification system 106 may assign a particular sample sequencing run to the collection 502 using reagent a from lot 1 based on determining that the particular sample sequencing run. The variant source identification system 106 may further assign a particular sample sequencing run to the second set based on the particular sample sequencing run using nucleotide sample slides from a particular lot. As further shown in fig. 5, the variant source identification system 106 performs an act 510 of detecting a pattern of different sample base interpretation errors for a sample sequencing run set. In general, the variant source identification system 106 performs actions similar to those depicted in fig. 3-4 to detect different sample base interpretation error patterns for a sample sequencing run set. In some embodiments, the variant source identification system 106 generates sample base interpretation error patterns for each sample sequencing run within a set of sample sequencing runs, and then aggregates the sample base interpretation error patterns. In some embodiments, the variant source identification system 106 may determine a statistically significant sample error rate over a plurality of sample sequencing runs within a set of sample sequencing runs. For example, as shown in fig. 5, the variant source identification system 106 determines sample base interpretation error patterns for the sets 502 and 504. FIG. 5 shows the sample base interpretation error patterns generated by the variation source identification system 106 grouping the sample base interpretation error rates based on base interpretation error types. In some embodiments, the variant source identification system 106 groups sample base interpretation error rates based on base interpretation error types and/or adjacent nucleotide bases. FIG. 6A and the corresponding discussion provide additional details regarding the pattern of base interpretation errors for different samples of a collection of test sample sequencing runs. As further shown in fig. 5, the variant source identification system 106 performs an act 512 of identifying the sample base interpretation error pattern based on a correlation between the base interpretation error pattern and the sample base interpretation error pattern. Specifically, act 512 includes identifying a sample base interpretation error pattern from among different sample base interpretation error patterns of the collection of sample sequencing runs based on a correlation between the base interpretation error pattern and the sample base interpretation error pattern. In some embodiments, the variant source identification system 106 identifies a sample base interpretation error pattern that is the same as the base interpretation error pattern. In some embodiments, the variant source identification system 106 identifies one or more sample base interpretation error patterns that are similar to the base interpretation error pattern. To illustrate, in FIG. 5, variant source identification system 106 uses base interpretation error pattern 514 to identify similarities between sets 502 and 504. For example, the variant source identification system 106 detects the set 502 to include an elevated A- > T error percentage, and detects the set 504 to include an elevated T- > C error percentage corresponding to the elevated A- > T and T- > C error percentages of the base interpretation error pattern 514. Although FIG. 5 illustrates the variant source identification system 106 comparing the base interpretation error patterns of the sample sequencing run set, in some embodiments the variant source identification system 106 compares the base interpretation error pattern 514 to the fault-specific sample base interpretation error pattern or to a separate sample base interpretation error pattern. Specifically, to determine a failure-specific sample base interpretation error pattern, the variant source identification system 106 generates a sample base interpretation error pattern corresponding to a single failure pattern. In particular, in some embodiments, the variant source identification system 106 identifies a failure-specific sample base interpretation error rate that increases with a specific failure source. For example, the variant source identification system 106 can determine that an increase in the sample base misinterpretation rate of the type of a- > C base misinterpretation with t_t as the adjacent nucleotide base is directly related to the flow cell batch problem. In some embodiments, the variant source identification system 106 generates a fault-specific sample base interpretation error pattern by utilizing a statistical model described in additional detail below in the paragraph corresponding to fig. 6A. Thus, in addition to or in lieu of identifying the sample base interpretation error pattern corresponding to base interpretation error pattern 514 from the collection of sample sequencing runs, variation source identification system 106 identifies one or more fault-specific sample base interpretation error patterns corresponding to base interpretation error pattern 514. For example, based on determining that base interpretation error pattern 514 includes an increase in the error percentage of a- > T base interpretation error rate, variation source identification system 106 identifies a corresponding a- > T fault-specific sample base interpretation error pattern. Similarly, the variant source identification system 106 may identify a second fault-specific sample base interpretation error pattern that includes a combination of elevated T- > C and G- > C error percentages corresponding to the elevated T- > C and G- > C base interpretation error rates within the base interpretation error pattern 514. In some embodiments, the variant source identification system 106 identifies a single sample base interpretation error pattern corresponding to base interpretation error pattern 514. In particular, rather than aggregating sample base interpretation error patterns for sample sequencing runs into a collection, the variant source identification system 106 selects individual base interpretation error patterns corresponding to the base interpretation error patterns 514. In one or more embodiments, the variant source identification system 106 performs act 512 of identifying a sample base interpretation error pattern based on a correlation between the base interpretation error pattern and the sample base interpretation error pattern by identifying a sample base interpretation error pattern similar to base interpretation error pattern 514 using a machine learning model. For example, the variant source identification system 106 may utilize a clustering algorithm, such as K-means clustering, multi-variable K-means clustering, or other types of clustering algorithms. In one example, the variant source identification system 106 utilizes sample base interpretation error patterns to train a clustering algorithm. In particular, the variant source identification system 106 can utilize sample base interpretation error patterns to predict which sample sequencing runs result in similar sources of sample failure. The variant source identification system 106 applies a trained clustering algorithm to the base interpretation error patterns to identify which sample base interpretation error pattern or patterns are most similar to the base interpretation error pattern. In some embodiments, the variant source qualification system 106 utilizes user input to further train the machine learning model described above. For example, the variant source qualification system 106 may provide an option to confirm the predicted source of the fault for display to the user. Based on the data indication from the client device identifying the predicted source of the fault as the source of the fault, the variant source qualification system 106 may further verify the probability associated with the source of the fault. In contrast, based on receiving a denial of the predicted source of the fault, the variant source qualification system 106 may adjust parameters of the machine learning model to provide more accurate predictions (e.g., contribution metrics) in the future. In some embodiments, as shown in fig. 5, the variant source identification system 106 identifies existing sample base interpretation error patterns for one or more sample sequencing runs. In particular, the variant source identification system 106 can identify an existing sample base interpretation error pattern that is the same as or similar to the base interpretation error pattern from a sample base interpretation error pattern repository. More specifically, the variant source identification system 106 may determine similar existing sample base interpretation error patterns from a base interpretation error pattern repository using the clustering algorithm described above. For example, the variant source identification system 106 may determine that the base interpretation error pattern indicates an increased error rate for the C- > G base interpretation error type with c_g adjacent nucleotides and the a- > T base interpretation error type with a_t adjacent nucleotides. The variant source identification system 106 can identify a first existing sample base interpretation error pattern in which the C- > G base interpretation error types with the C_G adjacent nucleotides have the same elevated error rate, and a second existing sample base interpretation error pattern in which the A- > T base interpretation error types with the A_T adjacent nucleotides have similar elevated error rates. Thus, the type of A- > T base interpretation error with the A_T adjacent nucleotides determines the correlation between the base interpretation error pattern and the first and second existing sample base interpretation error patterns. As part of performing act 512 of identifying the sample base interpretation error pattern based on the correlation between the base interpretation error pattern and the sample base interpretation error pattern, in some cases, the variant source identification system 106 filters out the sample base interpretation error pattern that is not correlated to the base interpretation error pattern. For example, in some embodiments, based on determining that the base interpretation error pattern corresponds to one or more sample base interpretation error patterns, the variant source identification system 106 filters out a set of dissimilar sample base interpretation error patterns that do not correspond to the one or more sample base interpretation error patterns. By excluding dissimilar sample base interpretation error patterns, the variant source identification system 106 can analyze the remaining sample base interpretation error patterns to obtain the best correspondence or match with the base interpretation error pattern under consideration. In addition, or alternatively, the variant source identification system 106 detects new sample base interpretation error patterns for one or more sample sequencing runs. Specifically, in some embodiments, the variant source identification system 106 determines that the base interpretation error pattern does not correspond to an existing sample base interpretation error pattern. In such cases, the variant source identification system 106 may identify a new sample base interpretation error pattern based on the base interpretation error pattern. For example, the variant source identification system 106 may assign the base interpretation error pattern as a new sample base interpretation error pattern and utilize a statistical model to analyze the new sample base interpretation error pattern with manufacturing data corresponding to the new sample base interpretation error pattern. In other embodiments, the variant source identification system 106 detects the new sample base interpretation error pattern by aggregating combinations of sample base interpretation error patterns that are similar to the base interpretation error pattern. Generally, as previously described, the variant source identification system 106 determines a correlation between one or more sample base interpretation error patterns and base interpretation error patterns. The variant source identification system 106 further identifies the source of the failure of the base interpretation error pattern by identifying the source of the failure corresponding to the one or more sample base interpretation error patterns. While fig. 5 and the corresponding paragraphs describe the variant source identification system 106 identifying one or more sample base interpretation error patterns corresponding to the base interpretation error patterns, fig. 6A-6C and the corresponding discussion describe the variant source identification system 106 determining a correlation between the sample base interpretation error patterns and the source of the fault. As mentioned, the variant source identification system 106 determines contribution metrics that indicate the probability that the sequencing pipeline material contributed to a base interpretation error from the sequencing pipeline. Fig. 6A-6C and corresponding paragraphs provide details regarding the variant source identification system 106 determining the source of the fault corresponding to the sample base interpretation error pattern and/or base interpretation error pattern in accordance with one or more embodiments. In general, fig. 6A-6C illustrate the processing of the variant source identification system 106 using the statistical model 614 to determine inputs of contribution metrics 622 that indicate the probability that the sequencing pipeline material 620 contributed to a base interpretation error from the sequencing pipeline. As an overview, the variant source identification system 106 utilizes the statistical model 614 to process sample sequencing data 616 and manufacturing data 618. As shown in fig. 6A, the variant source identification system 106 processes the sample sequencing data 616 for use as input to the statistical model 614. In particular, FIG. 6A illustrates several acts for processing sample sequencing data 616, including an act 602 of aggregating sample nucleotide fragment reads, an act 604 of determining a normalized sample error rate, and an act 608 of grouping normalized sample error rates according to base interpretation error types and different adjacent nucleotide base pairs. Fig. 6A further shows several acts for processing the manufacturing data 618. Specifically, the variant source qualification system 106 performs an act 610 of truncating the manufacturing qualification data, and an act 612 of generating a set of sequencing runs by grouping a threshold number of sequencing runs. As indicated above, the variant source identification system 106 may utilize a sequencing device to generate a sample nucleotide base interpretation of the reference genome. In some embodiments, prior to performing act 602 of aggregating sample nucleotide fragment reads, the variant source identification system 106 performs additional pre-processing acts to improve the quality of the sample sequencing data 616. For example, the variant source identification system 106 may perform additional actions of identifying past sample sequencing runs, as well as additional actions of removing alignment errors. In some embodiments, the sample sequencing run is part of a quality assurance measure for ensuring that the sequencing equipment performs a threshold error criterion. Thus, some sample sequencing runs from a particular sequencing apparatus contain error rates that exceed a threshold error criteria. Thus, in some embodiments, the variant source identification system 106 removes non-passing sample sequencing runs to provide a more realistic representation of normal sequencing variants. As part of performing act 602 of aggregating sample nucleotide fragment reads, in some embodiments, variant source identification system 106 processes data from variant interpretation files, such as variant interpretation format (VCF) files. Generally, the variant interpretation file contains information about variants found at specific locations or genomic coordinates in the reference genome. Thus, as part of performing act 602, the variant source qualification system 106 aggregates VCF data for forward read 1 (R1F), reverse read 1 (R1R), forward read 2 (R2F), and reverse read 2 (R2R) for each sequencing run. The aggregated VCF data may provide an indication of normal sequencing variation. By aggregating VCF data for various reads, in some cases, the variant source qualification system 106 generates VCF data for aggregated read 1 (R1) and aggregated read 2 (R2). In addition, as previously mentioned, the variant source identification system 106 sometimes performs additional pre-processing steps that remove alignment errors within the sample sequencing data 616. In particular, the variant source identification system 106 can identify alignment errors that occur at a frequency above a threshold variant frequency, and then remove these identified alignment errors. For example, the variant source identification system 106 removes the reference genome alignment error based on determining that the frequency of occurrence of the alignment error is above a 60% threshold variant frequency. As further shown in fig. 6A, the variant source identification system 106 performs an act 602 of aggregating sample nucleotide fragment reads. Generally, the variant source identification system 106 aggregates multiple reads from a single sequencing run to combine sample sequencing data. In particular, sequencing systems typically determine thousands to millions of nucleotide fragment reads from oligonucleotides extracted from a reference genome. In addition, the sequencing system can also determine forward and reverse nucleotide fragment reads. For example, in some embodiments, the sequencing system generates R1F, R1R, R F and R2R for each sample sequencing run. After determining the nucleotide fragment reads, the variant source identification system 106 compares the nucleotide fragment reads to a reference genome. More specifically, the variant source identification system 106 compares the R1F reads and R2F reads to the forward portion of the reference genome, and the variant source identification system 106 also compares the R1R reads and R2R reads to the reverse complement of the reference genome. In some embodiments, the variant source identification system 106 combines forward reads and reverse reads to further simplify the data. As suggested in fig. 6A, after the nucleotide fragment reads are aligned, the variant source identification system 106 analyzes the aligned nucleotide fragment reads to determine sample nucleotide base reads. The variant source identification system 106 may further compare the sample nucleotide base interpretation to a reference base of a reference genome to identify correct and incorrect sample nucleotide base interpretations. For example, in some embodiments, the variant source identification system 106 utilizes the confusion matrix shown in fig. 3 to determine sample nucleotide-specific error rates. As further shown in fig. 6A, the variant source qualification system 106 performs an act 604 of determining a normalized sample error rate. In general, the variant source identification system 106 may utilize the confusion matrix to generate sample base interpretation error rates. The variant source identification system 106 normalizes the sample base interpretation error rate in a similar manner as how the variant source identification system 106 normalizes the base interpretation error rate as described above with respect to fig. 3. In some implementations, the variant source qualification system 106 determines that the percentage of errors is equal to the count of specific errors divided by the count of correct interpretations. Consistent with the disclosure above explaining how the variant source identification system 106 normalizes the base interpretation error rate, the variant source identification system 106 may determine the normalized sample base interpretation error rate for a particular base interpretation error type and/or adjacent nucleotide bases. As further shown in FIG. 6A, after performing act 604 of determining a normalized sample error rate, the variant source identification system 106 performs act 608 of grouping the normalized sample error rates according to base interpretation error types and different adjacent nucleotide base pairs. Specifically, the variant source identification system 106 generates a sample base interpretation error pattern by grouping normalized sample error rates in a manner similar to how the variant source identification system 106 groups normalized base interpretation error rates as described above with respect to fig. 4. In one or more embodiments, the variant source identification system 106 utilizes the sample base interpretation error pattern as input into the statistical model 614. FIG. 6A illustrates a series of example actions of the variant source identification system 106 preprocessing and processing the sample sequencing data 616 for analysis by the statistical model 614. Specifically, FIG. 6A illustrates the use of normalized sample error rates and sample error rate sets as inputs to a statistical model 614. In addition, or alternatively, the variant source identification system 106 utilizes other sample sequencing data as input into the statistical model 614. To illustrate, in some embodiments, the variant source identification system 106 may access sequencing run error rates, quality scores, alignment metrics, read depths, and other primary or secondary metrics obtained from the sequencing pipeline. As further shown in fig. 6A, the variant source qualification system 106 utilizes the statistical model 614 to analyze the manufacturing data 618. Generally, the variance source identification system 106 processes the manufacturing data 618 to identify a collection of sample sequencing runs that utilize similar manufacturing materials, other hardware, chemistry, and/or software. Manufacturing data typically includes data indicative of the identity and various properties of materials, hardware, chemistry, and/or software used in sequencing runs. In particular, the manufacturing data may include a general purpose, identity, manufacturing number, or other identifying information associated with a piece of hardware, consumable, or software. For example, manufacturing data may include lot numbers or production or release dates associated with reagents, parts, or software versions. In some embodiments, the variant source identification system 106 processes the manufacturing data 618 by performing an act 610 of truncating the manufacturing identification data and an act 612 of generating a set of sequencing runs by grouping a threshold number of sequencing runs. In some implementations, as shown in fig. 6A, the variant source identification system 106 performs an act 610 of truncating the manufacturing identification data. In many cases, the source of failure is limited to manufacturing materials from the same or similar batches, or manufacturing materials produced within the same or similar schedules. For example, significant production errors in one manufacturing material may affect similar manufacturing materials from the same manufacturing lot. One way in which the variant source identification system 106 identifies similar manufacturing materials is by performing an act 610 of truncating manufacturing identification data. The manufacturing identification data may include a bar code ID or other manufacturing identification code. As illustrated, the variant source identification system 106 may truncate the seven-position manufacturing identification number to a four-position truncated manufacturing ID. As further shown in fig. 6A, the variant source identification system 106 performs an act 612 of generating a set of sequencing runs by grouping a threshold number of sequencing runs. Specifically, variant source identification system 106 performs act 612 by grouping a threshold number of sequencing runs that share the same truncated manufacturing identification data to generate a set of sequencing runs. As shown, the variant source identification system 106 groups the sequencing runs corresponding to the manufacturing identification numbers 1234567, 1234566, 1234565, and 1234564 based on sharing the same truncated manufacturing identification data 1234. In some embodiments, the variant source identification system 106 also sets a sequencing run target percentage to be assigned to the set of sequencing runs. For example, the variant source identification system 106 can target grouping at least 80% of the sequencing runs into a set comprising at least ten or more sequencing runs. FIG. 6A shows a particular series of actions performed by the variant source qualification system 106 for processing manufacturing data 618 in accordance with one or more embodiments. The variant source qualification system 106 may utilize additional or alternative methods to process the manufacturing data 618 to enter the statistical model 614. For example, instead of utilizing manufacturing identification data, the variant source identification system 106 may generate a sample sequencing run set by vendor, hardware type or identification, software type or identification, or chemical type or identification. As shown in fig. 6A, the variant source identification system 106 utilizes the statistical model 614 to analyze sample sequencing data 616 and manufacturing data 618. In particular, the variant source identification system 106 utilizes the statistical model 614 to determine contribution metrics that indicate the probability that sequencing pipeline material contributed to a base interpretation error from the sequencing pipeline. In at least one embodiment, the statistical model 614 includes a variance component model. The variance component model is used by the variance component identification system 106 to generate a allocable percentage of causal variance for sequencing pipeline material contributing to base interpretation errors. In particular, the variance component model may be utilized by the variance component identification system 106 to determine a percentage of probability that indicates that a given sequencing pipeline material is a source of variance or other source of failure. In addition, or alternatively, statistical model 614 includes other types of statistical models or algorithms. For example, in one or more embodiments, the statistical model 614 includes boundary value analysis and equivalence class-division testing for continuous data. More specifically, rather than truncating the manufacturing identification data, the variation source identification system 106 may utilize the complete manufacturing identification data. The variant source identification system 106 utilizes an equivalence class classification test to identify equivalence class classification or equivalence sequencing run groups with similar sample sequencing data based on the non-truncated manufacturing identification data. In some embodiments, the variant source qualification system 106 further utilizes a boundary analysis test to test boundaries between equivalence class partitions. As further shown in fig. 6A, the variant source identification system 106 utilizes the statistical model 614 to analyze the sample sequencing data 616 and the manufacturing data 618 associated with the sample sequencing data 616. In one or more embodiments, the variant source identification system 106 utilizes the statistical model 614 to analyze any other sequencing data. For example, in some embodiments, the sample sequencing data 616 represents internal quality test data for which the manufacturing data 618 is controlled or known. The variant source identification system 106 may also collect sequencing data that is not sample sequencing data. For example, in some embodiments, the variant source identification system 106 utilizes a sequencing apparatus to collect sequencing data along with manufacturing data for each sequencing run. FIG. 6B illustrates example outputs generated by the variant source qualification system 106 using the statistical model 614. In particular, fig. 6B illustrates an example contribution metric 622 that indicates a probability that the sequencing pipeline material 620 contributes to a base interpretation error from the sequencing pipeline. More specifically, FIG. 6B shows the percent allocable causal variation generated by the variation source identification system 106 for sequencing pipeline material contributing to base interpretation errors. In some embodiments, the variance source identification system 106 generates the allocatable cause variance percentage by using a variance component model. In general, the percent variance of the cause may be assigned to represent the probability of a given sequencing pipeline material being the cause of a particular base interpretation error type. For example, for error type G- > A with adjacent nucleotide C_T, the variant source identification system 106 determines that the clustered reagent HCXE2 and LDR (ligase detection reaction) have an effect on the denaturant. Each bar in the chart shown in fig. 6B shows the probability that a specific driver for a particular nucleotide changes along with its neighboring nucleotides. The sequencing pipeline material 620 shown in fig. 6B is indicative of various components contributing to the sequencing pipeline. For example, sequencing pipeline material 620 may include consumable products, sequencing machine components, or components of nucleotide sample slides. In some embodiments, sequencing pipeline material 620 includes additional components. Generally, the sequencing pipeline material 620 may include any portion of hardware, chemistry, or software that contributes to the sequencing pipeline. As mentioned, the variance source identification system 106 may generate a allocatable cause variance percentage for the sequencing pipeline material. In some embodiments, the variance source identification system 106 generates the ordered list based on the assignable cause variance percentages. For example, the variant source identification system 106 ranks the sequencing pipeline materials in order of highest percentage to lowest percentage of allocable causes. Thus, the arrangement indicates what sequencing pipeline materials are most likely to have significant relevance for error offsets. Further, the variance source identification system 106 may determine one or more sources of failure based on the generated allocable cause variance percentages. For example, in some cases, the variance source identification system 106 determines that the primary source of failure is the sequencing pipeline material associated with the highest allocable cause variance percentage. As described with respect to fig. 6A-6B, the variant source identification system 106 utilizes sample error rates based on base interpretation error types and different groupings of adjacent nucleotide bases to determine correlations between failure sources and base interpretation error patterns. FIG. 6C shows a bar graph 624 representing a percentage of base misinterpretation occurrences organized by base misinterpretation type. Generally, bar graph 624 indicates that the base read error rate is unevenly distributed across all base read error types. For example, as shown in FIG. 6C, base calls of the T- > A base call error type occur far more frequently than base calls of the T- > G base call error type. Furthermore, as shown in fig. 6C, errors involving Ts are more prevalent (as shown by the T- > A, T- > C and a- > T peaks). As further illustrated by the shaded boxes within the bar graph 624 of fig. 6C, the base interpretation error rate may also be unevenly distributed across all nucleotide fragment reads. For example, read 2 (R2) tends to experience more errors than read 1 (R1), which may be due to signal attenuation between R1 and R2. Thus, in some embodiments, in addition to or instead of grouping normalized sample error rates according to base interpretation error types and different adjacent nucleotide base pairs, the variant source identification system 106 may group normalized sample error rates according to the number of reads (e.g., R1 and R2). Fig. 6A-6C illustrate a variation source identification system 106 utilizing a statistical model to determine contribution metrics indicative of the contribution of sequencing pipeline material to base interpretation errors from a sequencing pipeline in accordance with one or more embodiments. Fig. 7A-7C illustrate a series of bar graphs that represent how the variant source qualification system 106 utilizes one or more statistical models to scale down fault sources in a hierarchical manner to generate contribution metrics, in accordance with one or more embodiments. As a brief overview, fig. 7A illustrates a total component bar graph 700 that represents the percent of allocable reasons based on total component analysis, in accordance with one or more embodiments. Fig. 7B illustrates a subassembly component bar graph 702 generated by the variant source qualification system 106 utilizing a statistical model on the subassembly to provide additional detail regarding a smaller subset of potential sources of failure, in accordance with one or more embodiments. FIG. 7C illustrates a variation source identification system 106 using nucleotide specific errors (rather than the simple primary metrics utilized in FIGS. 7A-7B) to generate a base interpretation error type bar graph 704 in accordance with one or more embodiments. By way of introduction to fig. 7A-7C, in some embodiments, the variant source identification system 106 may identify hundreds of variables or potential sources of failure within the manufacturing data. The variant source qualification system 106 can process hundreds of variables in a hierarchical manner that is more efficiently analyzed by a statistical model (such as a VCA). In some embodiments, the statistical model can accurately and efficiently handle a set of potential sources of failure at a time. For example, the statistical model may be limited to handling 32 potential sources of failure at a time. Thus, the variant source qualification system 106 may begin analyzing the advanced total component failure sources (with 32 potential failure sources as an upper limit) and then analyze the detailed sub-component raw materials (again with 32 potential failure sources as an upper limit). Fig. 7A-7C illustrate such layering methods in accordance with one or more embodiments. While fig. 7A-7C include an assignable cause percentage generated by the variant source qualification system 106 using VCA, the variant source qualification system 106 may analyze potential sources of failure in a hierarchical manner using alternative statistical models. In particular, the total component bar graph 700 shown in fig. 7A represents the allocable percentage of causes of the total component potential failure sources 706 attributable to the primary metric 708 variation. As shown in fig. 7A, the variant source qualification system 106 utilizes VCA to handle potential total component failure sources 706. For example, potential total component failure sources 706 include SBS batches, nucleotide sample slide (e.g., flow cell) batches, cluster batches, mach Short, and buffer batches. In other embodiments, the variant source identification system 106 utilizes the VCA to handle other potential sources of total component failure, such as general software or computing failure sources and sequencing equipment components. As further shown in fig. 7A, the variance source identification system 106 determines an assignable variance cause percentage of the primary metric 708 associated with the potential total component failure source 706. For example, as shown in fig. 7A, the variance source identification system 106 determines potential total component failure sources 706 that are the most likely causes of variance in the primary metrics 708. In some cases, for R1 and R2, the primary metrics 708 include Error Rate (ER), mered quality score (Q30), pre-phasing (PP), phasing (Ph), channel density (CnInt), resynthesis (Resynth), and yield. In other embodiments, the variance source identification system 106 generates the allocable cause percentages for different primary metrics, including but not limited to the number of clusters, the number of cycles that have been error rated, the percentage of clusters filtered, the cluster density, the number of sample pieces, and other primary metrics. In still other embodiments, the variant source identification system 106 generates a allocable cause percentage of a secondary measure, wherein the secondary measure includes a base interpretation error type and adjacent nucleotide bases, as described below with respect to fig. 7C. The variant source identification system 106 evaluates the potential total component failure sources 706 to determine those primary metrics from among the primary metrics 708 that lead to the greatest variant source of the sequencing variable of interest. As shown in fig. 7A, the variant source qualification system 106 determines that SBS batches have the greatest impact on pre-phasing, while cluster batches have the greatest impact on resynthesis. As further depicted in fig. 7A, the flow cell batch disproportionately affects intensity, error rate, phred fraction, and phase adjustment. The variant source qualification system 106 may further analyze any one of the potential total component failure sources 706 to further evaluate the potential sub-component failure sources. For example, the variant source qualification system 106 can decompose the flow cell potential total component failure sources into sub-component failure sources. Specifically, and as previously mentioned, the variant source qualification system 106 may further analyze any potential total component failure sources to evaluate their sub-component failure sources. In some cases, the variant source identification system 106 decomposes the flow cell potential total component failure sources into the following subcomponent failure sources: kit batches, glass batches, plastic batches, primer batches, hydrogel batches, etc. To this end, the variant source identification system 106 maintains other component variables at a high level (or set as a control) in order to more specifically identify variability that stems from potential sources of sub-component failure. For example, the variant source identification system 106 analyzes sequencing runs in which SBS batches, cluster batches, mahshort, and buffer batches were found to have little contribution to base interpretation errors, and then analyzes for potential sources of subcomponent failures. In some embodiments, the variant source qualification system 106 generates a sub-component bar graph similar to the total component bar graph 700 but indicative of a source of potential sub-component failure. By utilizing a statistical model, the variant source identification system 106 may analyze at a finer granularity level by analyzing potential subassembly fault sources to identify specific contributions of subassembly components. For example, the variant source identification system 106 may utilize the VCA to evaluate a kit component specific contribution. The variant source identification system 106 maintains other subassembly variables at a high level (or set as a control) in order to more accurately identify variability originating from subassembly components. For example, fig. 7B shows the primary metric 712 of the source of variation identification system 106 evaluating the potential subassembly component failure source 710. More specifically, fig. 7B shows a subassembly component bar graph 702 reflecting the percent of allocable causal variation contributed by the kit components. As described above, fig. 7A-7B show the variance source identification system 106 utilizing VCA to generate an assignable cause variance percentage for potential sources of failure with respect to primary metrics (such as error rate, Q30 score, etc.). In some embodiments, the variant source identification system 106 utilizes VCA to measure contributions of potentially failing sources of other metrics, including nucleotide-specific errors. Fig. 7C shows the variation source identification system 106 determining the contribution of various potential sources of failure to nucleotide-specific error variation. In particular, FIG. 7C shows a base interpretation error type bar graph 704 that indicates the contribution of a potential failure source 714 to the variation of the secondary measure 716. As shown in fig. 7C, the variant source identification system 106 tests potential fault sources 714 on all total component fault sources that have the greatest or highest contribution to base interpretation error rates. As shown in the base interpretation error type bar graph 704, the potential sources of failure 714 include buffer lot numbers (BufferLotNbr); phiX library preparation date (PhiXLibPrepDate); a machine group; flow cell bar code (fcBarcodeShort); and consumables including reagents, enzymes, nucleotide structures, and the like. The secondary metrics 716 measured in FIG. 7C include read number (R1 or R2), and base interpretation error type. For example, AC indicates a base interpretation error type of A- > C, AG indicates a base interpretation error type of A- > G, and so on. As mentioned previously, the variant source identification system 106 may utilize different types of sample sequencing data along with manufacturing data to determine the contribution metric. FIG. 8 illustrates an example embodiment in which the variant source identification system 106 utilizes insertion or deletion (INDEL) length as sequencing data to determine contribution metrics that indicate the contribution of sequencing pipeline material to base interpretation errors from the sequencing pipeline. In general, in addition to driving variations in base interpretation error rates, sequencing pipeline materials can also drive variations in INDEL length. Thus, the variance source identification system 106 can utilize a statistical model to analyze INDEL lengths and then determine the assignable cause variance percentage of the sequencing pipeline material 802 based on the INDEL lengths detected in the sequencing pipeline. For example, as shown in fig. 8, the shorter INDELs (where the inserted or deleted segment is less than or equal to 9 nucleotides) are driven primarily by hardware and fluid. More specifically, flow cell and fluid differences (including barrel pump, plunger, and well plate sequencing pipeline materials) contribute to a greater probability of INDEL length variation. In contrast, longer INDELs (where the inserted or deleted segment is greater than nine nucleotides) are driven more by the flow cell and the incorporation mixture. More specifically, SBS dye reagents (e.g., WIM 2) and clustering reagents (e.g., HCXE 2) are more prominent drivers that contribute to longer INDEL variation. As indicated above, in some embodiments, the variant source qualification system 106 provides a notification indicating one or more sources of failure to display on a computing device associated with the sequencing pipeline. Fig. 9A-9B illustrate a series of graphical user interfaces including fault mode notification and additional information about identified fault sources. As an overview, fig. 9A illustrates an example notification graphical user interface including failure mode notifications in accordance with one or more embodiments. In contrast, FIG. 9B illustrates an example error pattern analysis graphical user interface that provides additional analysis of information from failure pattern notifications. In particular, fig. 9A illustrates a notification graphical user interface 904 on a screen 902 of a user client device 900 (e.g., user client device 108). The notification graphical user interface 904 includes a failure mode notification 906 that includes a failure mode element 908, a probability element 910, and a variant source graphical element 912. As shown in fig. 9A, failure mode notification 906 includes failure mode element 908. The failure mode element 908 indicates one or more sequencing pipeline materials that the variant source identification system 106 has identified as potentially failing. In some embodiments, the variant source qualification system 106 determines a threshold number of potential fault sources to be displayed within the fault pattern element 908. For example, the variant source identification system 106 determines that no more than three potential sources of failure are displayed. In one or more embodiments, the variant source qualification system 106 determines the threshold number of potential sources of failure based on the threshold likelihood percentage. In at least one example, the variance source identification system 106 determines potential sources of failure that exhibit an assignable cause variance percentage that exceeds a probability threshold. To illustrate, the variance source identification system 106 determines a failure source that exhibits a correlation with a percent of assignable cause variance equal to or greater than 3%. In some embodiments, in addition to or in lieu of text describing the potential sources of failure, the variant source qualification system 106 generates and provides error codes for display on the notification graphical user interface 904, thereby indicating the source of failure with a code. As further shown in fig. 9A, the failure mode notification 906 also includes a probability element 910. Probability element 910 indicates a probability that the corresponding sequencing pipeline material is the source of the fault corresponding to the base interpretation error type of the sequencing pipeline. In some embodiments, the probability element 910 is equal to the determined allocable cause variation percentage. Fig. 9A also shows a failure mode notification 906 that includes a variant source graphical element 912. In some implementations, based on detecting the user interaction with the variance source graphical element 912, the user client device 900 updates the notification graphical user interface 904 to display a chart indicating the percentage of variance of the allocable cause. In some implementations, the variant source qualification system 106 provides the chart shown in FIG. 6B, displayed via the notification graphical user interface 904. Additionally, or alternatively, the variant source qualification system 106 selects a particular bar from the chart shown in fig. 6B to display via the notification graphical user interface 904. Specifically, the variant source identification system 106 determines bars that exhibit adjacent nucleotide bases corresponding to a particular base interpretation error type and/or having a base interpretation error rate. The variant source qualification system 106 may provide various types of charts and visual effects based on user selections of the variant source graphical element 912. For example, the variant source identification system 106 may also present the chart illustrated in fig. 3. In some embodiments, the variant source qualification system 106 provides elements within the failure mode notification 906 that identify the source of the failure. In particular, user client device 900 may present failure mode notification 906 and detect a user selection confirming the manufacturing material identified in failure mode notification 906. For example, a user may check the barrel pump and confirm the presence of bubbles or other faults within the barrel pump via selection of a selectable option on the user client device 900. In some embodiments, failure mode notification 906 includes a selectable option to confirm the predicted source of the failure. For example, the failure mode notification 906 may include an option to confirm the source of the barrel pump failure. In another example, failure mode notification 906 includes several selectable options, where each option is associated with a different failure source. For example, failure mode notification 906 may include selectable options associated with each of the barrel pump cartridge, the orifice plate cartridge, and reagent 1. The variant source qualification system 106 can confirm the presence of a given fault source based on a user selection of the given fault source. As mentioned previously, the variant source qualification system 106 may further modify parameters of the machine learning model based on user interactions with the element to confirm the source of the fault. In some embodiments, the variant source identification system 106 provides a failure mode notification 906 for real-time (or near real-time) display when a base interpretation error pattern is detected. Thus, the variant source identification system 106 may provide timely notification that a given sequencing material may cause a fault within the sequencing pipeline. As mentioned, fig. 9B illustrates an example error pattern analysis graphical user interface that includes additional information from the failure pattern notification. In particular, FIG. 9B illustrates an error pattern analysis graphical user interface 914 on a screen 902 of a user client device 900. In particular, error pattern analysis graphical user interface 914 includes a sequencing run element 916, a visualization modification element 918, a variable element 920, and an error visualization element 922. Generally, the error pattern analysis graphical user interface 914 provides a visualization of base interpretation error patterns. In some implementations, the variant source qualification system 106 provides the error pattern analysis graphical user interface 914 for display based on receiving an indication of a user selection of the variant source graphical element 912 shown in fig. 9A. In other implementations, the variant source qualification system 106 provides the error pattern analysis graphical user interface 914 based on user selections of additional user interface elements not shown in fig. 9A. FIG. 9B illustrates an error pattern analysis graphical user interface 914 that includes an error visualization element 922. By providing error visualization element 922, variant source identification system 106 generates a graphical visualization of base interpretation error patterns for one or more sequencing runs. For example, the error visualization element 922 shown in fig. 9B includes a box plot indicating the overall error rate (error rate) and the pattern within the correct interpretation by base organization. As shown, the error visualization element 922 includes an indication of a correct a interpretation (A A), a correct C interpretation (C C), a correct G interpretation (G G), and a correct T interpretation (T T). In other embodiments, error visualization element 922 displays a base interpretation error rate organized according to base interpretation error type. For example, error visualization element 922 may include an A- > C base interpretation error, a C- > T base interpretation error, and the like. Further, error visualization element 922 may include various types of visualizations. For example, as mentioned, error visualization element 922 may include box charts, bar charts, histograms, line charts, scatter charts, and other types of graphs or charts. As further shown in fig. 9B, error pattern analysis graphical user interface 914 includes a sequencing run element 916. The sequencing run element 916 indicates one or more sequencing runs depicted by the error visualization element 922. For example, as illustrated in fig. 9B, the variant source qualification system 106 may receive an indication from the user client device 900 that the user interacted with the sequencing run listed in the sequencing run element 916. The user client device 900 may update the sequencing run element 916 to indicate the selected sequencing run, for example, by highlighting the selected sequencing run. In addition to the sequencing run element 916, the error pattern analysis graphical user interface 914 also includes a variable element 920. In particular, variable element 920 indicates the variable visualized within error visualization element 922. To illustrate, based on an indication from a user of the user client device 900 that the user interacted with the variable element 920, the variant source identification system 106 may determine to visualize the error based on the base interpretation error type and the flanking nucleotide bases. For example, as shown in fig. 9B, the user client device 900 receives data indicating a selection of the correct C- > C base interpretation by the user when flanked by c_a. Based on detecting such user selection, the user client device 900 can update the error visualization element 922 to include a visualization of the selected base interpretation error type and flanking nucleotide bases. In addition to the variable element 920, the error pattern analysis graphical user interface 914 also includes a visualization modification element 918. For example, based on the user's interaction with the visualization modification element 918, the user client device 900 can customize the visualization displayed within the error visualization element 922. Specifically, for each chart displayed within the error visualization element 922, the visualization modification element 918 includes a jitter modification element, an outlier element, a box type element, a box style element, a No. 5 summary element, a response axis element, and a variable indication element. Based on the user's interactions with any element within the visualization modification element 918, the user client device 900 can customize the error visualization element 922. For example, by deselecting outlier elements, the user client device 900 may remove all outliers from the error visualization element 922. In another example, the user client device 900 may update the error visualization element 922 to include other types of graphics and charts based on the detected user interactions with the visualization modification element 918. Fig. 1-9B, corresponding text, and examples provide many different methods, systems, devices, and non-transitory computer-readable media for the variant source qualification system 106. In addition to the foregoing, one or more embodiments may be described in terms of a flowchart including acts for achieving a particular result, such as the flowchart of acts shown in FIG. 10. Additionally, actions described herein may be repeated or performed in parallel with each other or with different instances of the same or similar actions. FIG. 10 illustrates a flow chart of a series of actions 1000 for determining the source of a failure of a base interpretation error type. While FIG. 10 illustrates acts in accordance with one embodiment, alternative embodiments may omit, add, reorder, and/or modify any of the acts illustrated in FIG. 10. The acts of fig. 10 may be performed as part of a method. Alternatively, the non-transitory computer-readable medium may include instructions that, when executed by the one or more processors, cause the computing device to perform the acts of fig. 10. In some embodiments, the system may perform the actions of fig. 10. In one or more embodiments, series of acts 1000 are implemented on one or more computing devices (such as the computing device illustrated in fig. 11). Further, in some embodiments, the series of acts 1000 are implemented in a digital environment for sequencing a nucleic acid polymer. As shown in fig. 10, series of actions 1000 include an action 1002 of determining a base interpretation error rate, an action 1004 of determining a base interpretation error pattern from the base interpretation error rate, an action 1006 of identifying a sample base interpretation error pattern for one or more sample sequencing runs, and an action 1008 of determining a source of a fault of a base interpretation error type. The series of actions 1000 shown in FIG. 10 includes an action 1002 of determining a base interpretation error rate. Specifically, act 1002 includes determining a base interpretation error rate for nucleotide base interpretations generated by a sequencing pipeline that differ from reference bases in a reference genome. In some embodiments, act 1002 further comprises determining a base interpretation error rate by determining a nucleotide base interpretation generated by the sequencing pipeline that differs from a nucleotide specific error rate of the reference base. In one or more embodiments, act 1002 further comprises determining a base interpretation error rate by utilizing the confusion matrix. In some embodiments, act 1002 further comprises determining a base interpretation error rate by normalizing a confusion matrix comprising base interpretation error data based on the total number of correct nucleotide base interpretations in a particular type of nucleotide base interpretation. Moreover, in some embodiments, act 1002 further comprises normalizing the confusion matrix comprising base interpretation error data based on one or more of the period, time, or nucleotide reads of the base interpretation error and the total number of correct nucleotide base interpretations in a particular type of nucleotide base interpretation. The series of actions 1000 includes an action 1004 of detecting one or more base interpretation error patterns from the base interpretation error rates grouped according to base interpretation error types. Specifically, act 1004 includes detecting a base interpretation error pattern from a base interpretation error rate grouped according to base interpretation error type. In some embodiments, act 1004 includes determining a base interpretation error rate based on the base interpretation error type and different adjacent nucleotide base groupings that flank the incorrect nucleotide base interpretation, respectively; and detecting one or more base interpretation error patterns from the base interpretation error rates of base groupings according to base interpretation error type and different adjacent nucleotides. Series of acts 1000 includes an act 1006 of identifying one or more sample base interpretation error patterns for one or more sample sequencing runs. Specifically, act 1006 includes identifying one or more sample base interpretation error patterns for sequencing run using one or more samples of one or more sequencing pipelines corresponding to the sequencing pipeline based on the base interpretation error patterns, based on the one or more base interpretation error patterns. In some embodiments, act 1006 includes identifying one or more sample base interpretation error patterns for one or more sample sequencing runs by: sorting a collection of sample sequencing runs from sample sequencing runs utilizing similar manufacturing materials based on manufacturing identification data; detecting base interpretation error patterns of different samples in the sample sequencing run set; and identifying one or more sample base interpretation error patterns from among the different sample base interpretation error patterns of the collection of sample sequencing runs based on a correlation between the one or more base interpretation error patterns and the one or more sample base interpretation error patterns. In addition, act 1006 can further include detecting different sample base interpretation error patterns by: aggregating sample nucleotide fragment reads for sample sequencing runs; determining a sample nucleotide base interpretation error rate for a sample nucleotide base that is different from a reference base; and grouping the sample nucleotide specific error rates according to the type of base interpretation error and different adjacent nucleotide base pairs that flank the incorrect nucleotide base interpretation, respectively. In some embodiments, act 1006 further comprises classifying the set of sample sequencing runs utilizing similarly manufactured materials by: truncating the manufacturing identification data; and generating a set of sequencing runs by grouping a threshold number of sequencing runs that share the same truncated manufacturing identification data. In addition, in some embodiments, act 1006 further comprises identifying one or more sample base interpretation error patterns of the one or more sample sequencing runs by identifying existing sample base interpretation error patterns of the one or more sample sequencing runs or detecting new sample base interpretation error patterns of the one or more sample sequencing runs. As further shown in fig. 10, series of acts 1000 also include an act 1008 of determining a source of a fault of a base interpretation error type. Specifically, act 1008 includes determining a source of a fault corresponding to a base interpretation error type of the sequencing pipeline based on a correlation between one or more base interpretation error patterns and one or more sample base interpretation error patterns. In some embodiments, act 1008 includes determining a source of a fault corresponding to a base interpretation error type of the sequencing pipeline based on a probability that the one or more base interpretation error patterns correspond to the one or more sample base interpretation error patterns. In some embodiments, act 1008 further comprises determining a source of the fault corresponding to the sequencing pipeline by determining contribution metrics indicative of a contribution of sequencing pipeline material to base interpretation errors from the sequencing pipeline; and determining a source of the failure of the base interpretation error type based on the contribution measure. Moreover, in some embodiments, act 1008 further comprises determining the contribution metric by determining an allocable cause variation of sequencing pipeline material contributing to a base interpretation error from the sequencing pipeline. In some embodiments, act 1008 further comprises determining the source of the fault by identifying a consumable product, a portion of a sequencing machine, a software application or feature, or a portion of a nucleotide sample slide as factors contributing to sequencing variation in the sequencing pipeline. In some embodiments, act 1008 further comprises determining a source of the fault corresponding to the sequencing pipeline by: determining contribution metrics using the statistical model, the contribution metrics being indicative of a probability that the sequencing pipeline material contributed to a base interpretation error from the sequencing pipeline; and determining a source of the failure of the base interpretation error type based on the contribution measure. Further, act 1008 can include determining a contribution metric using the statistical model by generating an assignable cause variance percentage of sequencing pipeline material that contributes to base interpretation errors using the variance component model. In some embodiments, act 1008 includes determining a correlation between one or more base interpretation error patterns and one or more sample base interpretation error patterns by determining a percentage of allocable causal variation of sequencing pipeline material that contributes to base interpretation errors of the base interpretation error type using a variance component model. In some embodiments, series of acts 1000 include additional acts of providing a notification indicating the source of the fault for display on a computing device associated with the sequencing pipeline. The methods described herein can be used in conjunction with a variety of nucleic acid sequencing techniques. Particularly suitable techniques are those in which the nucleic acid is attached at a fixed position in the array such that its relative position does not change and in which the array is repeatedly imaged. Embodiments in which images are obtained in different color channels (e.g., coincident with different labels used to distinguish one nucleotide base type from another) are particularly useful. In some embodiments, the process of determining the nucleotide sequence of the target nucleic acid (i.e., the nucleic acid polymer) may be an automated process. Preferred embodiments include sequencing-by-synthesis (SBS) techniques. SBS techniques typically involve enzymatic extension of nascent nucleic acid strands by repeated nucleotide additions to the template strand. In conventional SBS methods, a single nucleotide monomer can be provided to a target nucleotide in the presence of a polymerase in each delivery. However, in the methods described herein, more than one type of nucleotide monomer can be provided to a target nucleic acid in the presence of a polymerase in delivery. The SBS techniques described below may utilize single-ended sequencing or double-ended sequencing. In single-read sequencing, the sequencing device reads fragments from one end to the other to generate a sequence of base pairs. In contrast, during double-ended sequencing, the sequencing device starts with one read, completes the read for a particular read length in the same direction, and starts with another read from the opposite end of the fragment. SBS may utilize nucleotide monomers having a terminator moiety or nucleotide monomers lacking any terminator moiety. Methods of using nucleotide monomers lacking a terminator include, for example, pyrosequencing and sequencing using gamma-phosphate labeled nucleotides, as described in further detail below. In methods using nucleotide monomers lacking a terminator, the number of nucleotides added in each cycle is generally variable and depends on the template sequence and the manner in which the nucleotides are delivered. For SBS techniques using nucleotide monomers with a terminator moiety, the terminator may be effectively irreversible under the sequencing conditions used, as in the case of conventional sanger sequencing using dideoxynucleotides, or the terminator may be reversible, as in the case of the sequencing method developed by Solexa (now Illumina, inc.). SBS techniques can utilize nucleotide monomers having a tag moiety or nucleotide monomers lacking a tag moiety. Thus, an incorporation event may be detected based on: characteristics of the label, such as fluorescence of the label; characteristics of the nucleotide monomers, such as molecular weight or charge; byproducts of nucleotide incorporation, such as release of pyrophosphate; etc. In embodiments where two or more different nucleotides are present in the sequencing reagent, the different nucleotides may be distinguishable from each other, or alternatively, the two or more different labels may be indistinguishable under the detection technique used. For example, the different nucleotides present in the sequencing reagents may have different labels, and they may be distinguished using appropriate optics, as exemplified by the sequencing method developed by Solexa (now Illumina, inc.). Preferred embodiments include pyrosequencing techniques. Pyrosequencing detects the release of inorganic pyrophosphates (PPi) when specific nucleotides are incorporated into a nascent strand (Ronaghi, m., karamohamed, s., pettersson, b., uhlen, m., and Nyren, p. (1996), 'Real-time DNA sequencing using detection of pyrophosphate release', 'Analytical Biochemistry (1), 84-9; ronaghi, m. (2001)' Pyrosequencing sheds light on DNA sequencing ',' Genome res.,11 (1), 3-11; ronaghi, m., uhlen, m.and Nyren, p. (1998) 'A sequencing method based on Real-time phosphophosphate,' Science 281 (5375), 363; U.S. Pat. No. 6,210,891; U.S. 6,258,568 and U.S. Pat. No. 6,274,320, the disclosures of which are incorporated herein by reference in their entirety). In pyrosequencing, released PPi can be detected by immediate conversion to ATP by an Adenosine Triphosphate (ATP) sulfurylase and the level of ATP produced detected by photons produced by the luciferase. The nucleic acid to be sequenced can be attached to a feature in the array and the array can be imaged to capture chemiluminescent signals resulting from incorporation of nucleotides at the feature of the array. Images may be obtained after processing the array with a particular nucleotide type (e.g., A, T, C or G). The images obtained after adding each nucleotide type will differ in which features in the array are detected. These differences in the images reflect the different sequence content of the features on the array. However, the relative position of each feature will remain unchanged in the image. Images may be stored, processed, and analyzed using the methods described herein. For example, images obtained after processing the array with each different nucleotide type may be processed in the same manner as exemplified herein for images obtained from different detection channels for reversible terminator-based sequencing methods. In another exemplary type of SBS, cycle sequencing is accomplished by stepwise addition of reversible terminator nucleotides containing, for example, cleavable or photobleachable dye tags, as described, for example, in WO 04/018497 and U.S. Pat. No. 7,057,026, the disclosures of which are incorporated herein by reference. This process is commercialized by Solexa (now Illumina Inc.), and is also described in WO 91/06678 and WO 07/123,744, the disclosures of each of which are incorporated herein by reference. The availability of fluorescent-labeled terminators (where the termination may be reversible and the fluorescent label may be cleaved) facilitates efficient Cyclic Reversible Termination (CRT) sequencing. The polymerase can also be co-engineered to efficiently incorporate and extend from these modified nucleotides. Preferably, in sequencing embodiments based on reversible terminators, the tag does not substantially inhibit extension under SBS reaction conditions. However, the detection label may be removable, for example by cleavage or degradation. The image may be captured after the label is incorporated into the arrayed nucleic acid features. In a particular embodiment, each cycle involves delivering four different nucleotide types simultaneously to the array, and each nucleotide type has a spectrally different label. Four images may then be obtained, each using a detection channel selective for one of the four different labels. Alternatively, different nucleotide types may be sequentially added, and an image of the array may be obtained between each addition step. In such embodiments, each image will show nucleic acid features that have incorporated a particular type of nucleotide. Due to the different sequence content of each feature, different features will or will not be present in different images. However, the relative position of the features will remain unchanged in the image. Images obtained by such reversible terminator-SBS methods may be stored, processed, and analyzed as described herein. After the image capturing step, the label may be removed and the reversible terminator moiety may be removed for subsequent cycles of nucleotide addition and detection. Removal of marks after they have been detected in a particular cycle and before subsequent cycles can provide the advantage of reducing background signals and crosstalk between cycles. Examples of useful marking and removal methods are set forth below. In particular embodiments, some or all of the nucleotide monomers may include a reversible terminator. In such embodiments, the reversible terminator/cleavable fluorophore may comprise a fluorophore linked to a ribose moiety via a 3' ester linkage (Metzker, genome Res.15:1767-1776 (2005), incorporated herein by reference). Other approaches have separated terminator chemistry from fluorescent-labeled cleavage (Ruparel et al Proc Natl Acad Sci USA 102:5932-7 (2005), which is incorporated herein by reference in its entirety). Ruparel et al describe the development of reversible terminators that use small 3' allyl groups to block extension, but can be easily deblocked by short treatment with palladium catalysts. The fluorophore is attached to the base via a photocleavable linker that can be easily cleaved by exposure to long wavelength ultraviolet light for 30 seconds. Thus, disulfide reduction or photocleavage can be used as a cleavable linker. Another approach to reversible termination is to use natural termination, which occurs subsequent to the placement of the bulky dye on dntps. The presence of a charged bulky dye on dntps can act as efficient terminators by steric and/or electrostatic hindrance. The presence of an incorporation event prevents further incorporation unless the dye is removed. Cleavage of the dye removes the fluorophore and effectively reverses termination. Examples of modified nucleotides are also described in U.S. patent No. 7,427,673 and U.S. patent No. 7,057,026, the disclosures of which are incorporated herein by reference in their entirety. Additional exemplary SBS systems and methods that may be utilized with the methods and systems described herein are described in U.S. patent application publication No. 2007/0166705, U.S. patent application publication No. 2006/0188901, U.S. patent application publication No. 7,057,026, U.S. patent application publication No. 2006/02404339, U.S. patent application publication No. 2006/0281109, PCT publication No. WO 05/065814, U.S. patent application publication No. 2005/0100900, PCT publication No. WO 06/064199, PCT publication No. WO 07/010,251, U.S. patent application publication No. 2012/0270305, and U.S. patent application publication No. 2013/0260372, the disclosures of which are incorporated herein by reference in their entirety. Some embodiments may use fewer than four different labels to use detection of four different nucleotides. SBS may be performed, for example, using the methods and systems described in the material of incorporated U.S. patent application publication No. 2013/007932. As a first example, a pair of nucleotide types may be detected at the same wavelength, but distinguished based on the difference in intensity of one member of the pair relative to the other member, or based on a change in one member of the pair that results in the appearance or disappearance of a distinct signal compared to the detected signal of the other member of the pair (e.g., by chemical, photochemical, or physical modification). As a second example, three of the four different nucleotide types can be detected under specific conditions, while the fourth nucleotide type lacks a label that can be detected under those conditions or that is minimally detected under those conditions (e.g., minimal detection due to background fluorescence, etc.). The incorporation of the first three nucleotide types into the nucleic acid may be determined based on the presence of their respective signals, and the incorporation of the fourth nucleotide type into the nucleic acid may be determined based on the absence of any signals or minimal detection of any signals. As a third example, one nucleotide type may include a label detected in two different channels, while other nucleotide types are detected in no more than one channel. The three exemplary configurations described above are not considered mutually exclusive and may be used in various combinations. The exemplary embodiment combining all three examples is a fluorescence-based SBS method using a first nucleotide type detected in a first channel (e.g., dATP with a label detected in the first channel when excited by a first excitation wavelength), a second nucleotide type detected in a second channel (e.g., dCTP with a label detected in the second channel when excited by a second excitation wavelength), a third nucleotide type detected in both the first and second channels (e.g., dTTP with at least one label detected in both channels when excited by the first and/or second excitation wavelength), and a fourth nucleotide type lacking a label detected or minimally detected in either channel (e.g., dGTP without a label). Furthermore, as described in the material of incorporated U.S. patent application publication No. 2013/007932, sequencing data may be obtained using a single channel. In such a so-called single dye sequencing method, a first nucleotide type is labeled, but the label is removed after the first image is generated, and a second nucleotide type is labeled only after the first image is generated. The third nucleotide type remains labeled in both the first and second images, and the fourth nucleotide type remains unlabeled in both images. Some embodiments may utilize sequencing-by-ligation techniques. Such techniques utilize DNA ligases to incorporate oligonucleotides and determine the incorporation of such oligonucleotides. Oligonucleotides typically have different labels associated with the identity of a particular nucleotide in the sequence to which the oligonucleotide hybridizes. As with other SBS methods, images can be obtained after the array of nucleic acid features is treated with labeled sequencing reagents. Each image will show nucleic acid features that have incorporated a particular type of label. Due to the different sequence content of each feature, different features will or will not be present in different images, but the relative positions of the features will remain unchanged in the images. Images obtained by ligation-based sequencing methods may be stored, processed, and analyzed as described herein. Exemplary SBS systems and methods that can be used with the methods and systems described herein are described in U.S. patent No. 6,969,488, U.S. patent No. 6,172,218, and U.S. patent No. 6,306,597, the disclosures of which are incorporated herein by reference in their entirety. Some embodiments may utilize nanopore sequencing (Deamer, D.W. and Akeson, M. 'Nanopores and nucleic acids: prospects for ultrarapid sequencing.' Trends Biotechnol.18,147-151 (2000); deamer, D.and D.Branton, 'Characterization of nucleic acids by nanopore analysis'. Acc.chem. Vs. 35:817-825 (2002); li, J.; M.Gershow, D.Stein, E.Brandin, and J.A. Golovchenko, 'DNA molecules and configurations in a solid-state nanopore microscope', nat.Mater.,2:611-615 (2003), the disclosures of which are incorporated herein by reference in their entirety). In such embodiments, the target nucleic acid passes through the nanopore. The nanopore may be a synthetic pore or a biofilm protein, such as alpha-hemolysin. Each base pair can be identified by measuring fluctuations in the conductivity of the pore as the target nucleic acid passes through the nanopore. (U.S. Pat. No. 7,001,792; soni, G.V. and Meller, 'A.Process toward ultrafast DNA sequencing using solid-state nanopores', 'Clin.chem.53,1996-2001 (2007); health, K.,' Nanopore-based single-molecular DNA analysis ',' nanomed.,2,459-481 (2007); cockroft, S.L., chu, J., 'Amorin, M.and Ghadiri, M.R.,' A single-molecule Nanopore device detects DNA polymerase activity with single-nucleic resolution ',' J.am.chem.Soc.130,818-820 (2008) the disclosures of which are incorporated herein by reference in their entirety). Data obtained from nanopore sequencing may be stored, processed, and analyzed as described herein. In particular, according to the exemplary processing of optical images and other images described herein, data may be processed as images. Some embodiments may utilize methods involving real-time monitoring of DNA polymerase activity. Nucleotide incorporation can be detected by Fluorescence Resonance Energy Transfer (FRET) interactions between a fluorophore-bearing polymerase and a gamma-phosphate labeled nucleotide, as described, for example, in U.S. patent No. 7,329,492 and U.S. patent No. 7,211,414, each of which is incorporated herein by reference, or can be detected with zero-mode waveguides, as described, for example, in U.S. patent No. 7,315,019, which is incorporated herein by reference, and can be detected using fluorescent nucleotide analogs and engineered polymerases, as described, for example, in U.S. patent No. 7,405,281 and U.S. patent application publication No. 2008/0108082, each of which is incorporated herein by reference. Illumination may be limited to volumes on the order of a sharp liter around surface tethered polymerases such that incorporation of fluorescently labeled nucleotides can be observed in a low background (level, m.j. Et al, 'Zero-mode waveguides for single-molecule analysis at high concentrations,' Science 299,682-686 (2003); lunquist, p.m. et al, 'Parallel confocal detection of single molecules in real time,' opt. Lett.33,1026-1028 (2008); korlach, j. Et al, 'Selective aluminum passivation for targeted immobilization of single DNA polymerase molecules in Zero-mode waveguide nano structures,' proc. Natl. Acad. Sci. Usa 105,1176-1181 (2008), the disclosures of which are incorporated herein by reference in their entirety). Images obtained by such methods may be stored, processed, and analyzed as described herein. Some SBS embodiments include detecting protons released upon incorporation of a nucleotide into an extension product. For example, sequencing based on proton release detection may use an electrical detector commercially available from Ion Torrent corporation (Guilford, CT, which is a Life Technologies sub-company) and related techniques or sequencing methods and systems described in US 2009/0026082A1, US 2009/0125889 A1, US 2010/0137543 A1, or US 2010/0282617A1, each of which is incorporated herein by reference. The method for amplifying a target nucleic acid using kinetic exclusion described herein can be easily applied to a substrate for detecting protons. More specifically, the methods set forth herein can be used to generate a clonal population of amplicons for detecting protons. The SBS method described above can advantageously be performed in a variety of formats, such that a plurality of different target nucleic acids are manipulated simultaneously. In certain embodiments, different target nucleic acids may be treated in a common reaction vessel or on the surface of a particular substrate. This allows for convenient delivery of sequencing reagents, removal of unreacted reagents, and detection of incorporation events in a variety of ways. In embodiments using surface-bound target nucleic acids, the target nucleic acids may be in an array format. In an array format, the target nucleic acids may typically bind to the surface in a spatially distinguishable manner. The target nucleic acid may be bound by direct covalent attachment, attachment to a bead or other particle, or binding to a polymerase or other molecule attached to a surface. An array may comprise a single copy of a target nucleic acid at each site (also referred to as a feature), or multiple copies having the same sequence may be present at each site or feature. Multiple copies may be generated by amplification methods such as bridge amplification or emulsion PCR as described in further detail below. The methods described herein may use an array having features at any of a variety of densities, including, for example, at least about 10 features/cm 2 100 features/cm 2 500 features/cm 2 1,000 features/cm 2 5,000 features/cm 2 10,000 features/cm 2 50,000 features/cm 2 100,000 features/cm 2 1,000,000 features/cm 2 5,000,000 features/cm 2 Or higher. An advantage of the methods set forth herein is that they provide for rapid and efficient detection of multiple target nucleic acids in parallel. Thus, the present disclosure provides integrated systems that are capable of preparing and detecting nucleic acids using techniques known in the art, such as those exemplified above. Thus, the integrated system of the present disclosure may include fluidic components capable of delivering amplification reagents and/or sequencing reagents to one or more immobilized DNA fragments, including components such as pumps, valves, reservoirs, fluidic lines, and the like. The flow-through cell may be configured for and/or used to detect a target nucleic acid in an integrated system. Exemplary flow cells are described, for example, in US 2010/011768 A1 and U.S. serial No. 13/273,666, each of which is incorporated herein by reference. As illustrated for flow cells, one or more fluidic components of the integrated system may be used for amplification methods and detection methods. Taking a nucleic acid sequencing embodiment as an example, one or more fluidic components of an integrated system can be used in the amplification methods set forth herein as well as for delivering sequencing reagents in a sequencing method (such as those exemplified above). Alternatively, the integrated system may comprise a separate fluidic system to perform the amplification method and to perform the detection method. Examples of integrated sequencing systems capable of generating amplified nucleic acids and also determining nucleic acid sequences include, but are not limited to, miSeq TM Platform (Illumina, inc., san Diego, CA) and apparatus described in U.S. serial No. 13/273,666, which is incorporated herein by reference. The sequencing system described above sequences nucleic acid polymers present in a sample received by a sequencing device. As defined herein, 'sample' and derivatives thereof are used in their broadest sense, including any specimen, culture, etc. suspected of containing the target. In some embodiments, the sample comprises DNA, RNA, PNA, LNA, chimeric or hybridized forms of the nucleic acid. The sample may comprise any biological, clinical, surgical, agricultural, atmospheric or aquatic animal and plant based specimen containing one or more nucleic acids. The term also includes any isolated nucleic acid sample, such as genomic DNA, fresh frozen or formalin-fixed paraffin-embedded nucleic acid specimen. It is also contemplated that the source of the sample may be: a single individual, a collection of nucleic acid samples from genetically related members, a nucleic acid sample from genetically unrelated members, a nucleic acid sample (matched to it) from a single individual (such as a tumor sample and a normal tissue sample), or a sample from a single source containing two different forms of genetic material (such as maternal DNA and fetal DNA obtained from a maternal subject), or the presence of contaminating bacterial DNA in a sample containing plant or animal DNA. In some embodiments, the source of nucleic acid material may include nucleic acid obtained from a neonate, such as nucleic acid typically used in neonatal screening. The nucleic acid sample may include high molecular weight materials, such as genomic DNA (gDNA). The sample may include low molecular weight substances such as nucleic acid molecules obtained from FFPE samples or archived DNA samples. In another embodiment, the low molecular weight substance comprises enzymatically or mechanically fragmented DNA. The sample may comprise cell-free circulating DNA. In some embodiments, the sample may include nucleic acid molecules obtained from biopsies, tumors, scrapes, swabs, blood, mucus, urine, plasma, semen, hair, laser capture microdissection, surgical excision, and other clinically or laboratory obtained samples. In some embodiments, the sample may be an epidemiological sample, an agricultural sample, a forensic sample, or a pathogenic sample. In some embodiments, the sample may include nucleic acid molecules obtained from an animal (such as a human or mammalian source). In another embodiment, the sample may comprise nucleic acid molecules obtained from a non-mammalian source (such as a plant, bacterium, virus, or fungus). In some embodiments, the source of the nucleic acid molecule may be an archived or extincted sample or species. In addition, the methods and compositions disclosed herein can be used to amplify nucleic acid samples having low quality nucleic acid molecules, such as degraded and/or fragmented genomic DNA from forensic samples. In one embodiment, the forensic sample may include nucleic acid obtained from a crime scene, nucleic acid obtained from a missing person DNA database, nucleic acid obtained from a laboratory associated with forensic investigation, or forensic sample obtained by law enforcement, one or more military services, or any such person. The nucleic acid sample may be a purified sample or a lysate containing crude DNA, e.g., derived from an oral swab, paper, fabric or other substrate that may be impregnated with saliva, blood or other body fluids. Thus, in some embodiments, the nucleic acid sample may comprise a small amount of DNA (such as genomic DNA), or a fragmented portion of DNA. In some embodiments, the target sequence may be present in one or more bodily fluids, including, but not limited to, blood, sputum, plasma, semen, urine, and serum. In some embodiments, the target sequence may be obtained from a hair, skin, tissue sample, autopsy, or remains of the victim. In some embodiments, nucleic acids comprising one or more target sequences may be obtained from a dead animal or human. In some embodiments, the target sequence may include a nucleic acid obtained from non-human DNA (such as microbial, plant, or insect DNA). In some embodiments, the target sequence or amplified target sequence is directed to human identification for purposes. In some embodiments, the present disclosure relates generally to methods for identifying characteristics of forensic samples. In some embodiments, the disclosure relates generally to human identification methods using one or more target-specific primers disclosed herein or one or more target-specific primers designed with the primer design criteria outlined herein. In one embodiment, a forensic sample or human identification sample containing at least one target sequence can be amplified using any one or more of the target-specific primers disclosed herein or using the primer standards outlined herein. The components of the variant source qualification system 106 may include software, hardware, or both. For example, the components of the variant source qualification system 106 can include one or more instructions stored on a non-transitory computer-readable storage medium and executable by a processor of one or more computing devices (e.g., the user client device 108). The computer-executable instructions of the variant source qualification system 106, when executed by one or more processors, may cause a computing device to perform the fault source qualification method described herein. Alternatively, the components of the variant source qualification system 106 may include hardware, such as a dedicated processing device, to perform a certain function or group of functions. In addition, or alternatively, components of the variant source qualification system 106 may include a combination of computer-executable instructions and hardware. Furthermore, the components of the variance source identification system 106 that perform the functions described herein with respect to the variance source identification system 106 may be implemented, for example, as part of a stand-alone application, as a module of an application, as a plug-in to an application, as one or more library functions that may be invoked by other applications, and/or as a cloud computing model. Thus, the components of the variant source qualification system 106 may be implemented as part of a stand-alone application on a personal computing device or mobile device. In addition, or alternatively, components of the variant source identification system 106 may be implemented in any application that provides sequencing services, including but not limited to Illumina BaseSpace, illumina DRAGEN, or Illumina TruSight software. 'Illumina', 'BaseSpace', 'DRAGEN' and 'TruSight' are registered trademarks or trademarks of Illumina, inc. As discussed in more detail below, embodiments of the present disclosure may include or utilize a special purpose or general-purpose computer including computer hardware, such as, for example, one or more processors and system memory. Embodiments within the scope of the present disclosure also include physical and other computer-readable media for carrying or storing computer-executable instructions and/or data structures. In particular, one or more of the processes described herein may be at least partially implemented as instructions embodied in a non-transitory computer-readable medium and executable by one or more computing devices (e.g., any of the media content access devices described herein). Generally, a processor (e.g., a microprocessor) receives instructions from a non-transitory computer-readable medium (e.g., memory, etc.) and executes those instructions, thereby performing one or more processes, including one or more of the processes described herein. Computer readable media can be any available media that can be accessed by a general purpose or special purpose computer system. The computer-readable medium storing computer-executable instructions is a non-transitory computer-readable storage medium (device). The computer-readable medium carrying computer-executable instructions is a transmission medium. Thus, by way of example, and not limitation, embodiments of the present disclosure may include at least two distinctly different types of computer-readable media: a non-transitory computer readable storage medium (device) and a transmission medium. Non-transitory computer readable storage media (devices) include RAM, ROM, EEPROM, CD-ROM, solid State Drives (SSDs) (e.g., based on RAM), flash memory, phase Change Memory (PCM), other types of memory, other optical disk storage, magnetic disk storage, or other magnetic storage devices, or any other medium that can be used to store desired program code means in the form of computer-executable instructions or data structures and that can be accessed by a general purpose or special purpose computer. A 'network' is defined as one or more data links that enable the transmission of electronic data between computer systems and/or modules and/or other electronic devices. When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a transmission medium. The transmission media can include networks and/or data links that can be used to carry desired program code means in the form of computer-executable instructions or data structures, and that can be accessed by a general purpose or special purpose computer. Combinations of the above should also be included within the scope of computer-readable media. Furthermore, upon reaching various computer system components, program code means in the form of computer-executable instructions or data structures can be transferred automatically from transmission media to non-transitory computer-readable storage media (devices) (or vice versa). For example, computer-executable instructions or data structures received over a network or data link may be buffered in RAM within a network interface module (e.g., NIC) and then ultimately transferred to computer system RAM and/or to less volatile computer storage media (devices) at a computer system. Thus, it should be understood that a non-transitory computer readable storage medium (device) can be included in a computer system component that also (or even primarily) utilizes transmission media. Computer-executable instructions comprise, for example, instructions and data which, when executed at a processor, cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions. In some embodiments, computer-executable instructions are executed on a general-purpose computer to turn the general-purpose computer into a special-purpose computer that implements the elements of the present disclosure. The computer-executable instructions may be, for example, binary numbers, intermediate format instructions such as assembly language, or even source code. Although the subject matter has been described in language specific to structural features and/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the described features or acts. Rather, the described features and acts are disclosed as example forms of implementing the claims. Those skilled in the art will appreciate that the disclosure may be practiced in network computing environments with many types of computer system configurations, including personal computers, desktop computers, laptop computers, message processors, hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, mobile telephones, PDAs, tablet computers, pagers, routers, switches, and the like. The disclosure may also be practiced in distributed system environments where local and remote computer systems, which are linked (either by hardwired data links, wireless data links, or by a combination of hardwired and wireless data links) through a network, both perform tasks. In a distributed system environment, program modules may be located in both local and remote memory storage devices. Embodiments of the present disclosure may also be implemented in a cloud computing environment. In this specification, 'cloud computing' is defined as a model for enabling on-demand network access to a shared pool of configurable computing resources. For example, cloud computing may be employed in the marketplace to provide ubiquitous and convenient on-demand access to a shared pool of configurable computing resources. The shared pool of configurable computing resources may be quickly preset via virtualization and released with low management effort or service provider interactions, and then expanded accordingly. Cloud computing models may be composed of various features such as, for example, on-demand self-service, wide network access, resource pooling, fast resilience, quantifiable services, and the like. The cloud computing model may also expose various service models, such as, for example, software as a service (SaaS), platform as a service (PaaS), and infrastructure as a service (IaaS). The cloud computing model may also be deployed using different deployment models, such as private cloud, community cloud, public cloud, hybrid cloud, and so forth. In this specification and in the claims, a 'cloud computing environment' is an environment in which cloud computing is employed. Fig. 11 illustrates a block diagram of a computing device 1100 that may be configured to perform one or more of the processes described above. It should be appreciated that one or more computing devices (such as computing device 1100) may implement the variant source identification system 106 and the sequencing system 104. As shown in fig. 11, computing device 1100 may include a processor 1102, memory 1104, storage 1106, I/O interfaces 1108, and a communication interface 1111, which may be communicatively coupled by a communication infrastructure 1111. In some embodiments, computing device 1100 may include fewer or more components than are shown in fig. 11. The following paragraphs describe the components of the computing device 1100 shown in fig. 11 in more detail. In one or more embodiments, the processor 1102 includes hardware for executing instructions, such as those comprising a computer program. As an example, and not by way of limitation, to execute instructions for dynamically modifying a workflow, processor 1102 may retrieve (or fetch) the instructions from an internal register, internal cache, memory 1104, or storage 1106, and then decode and execute. The memory 1104 may be volatile or non-volatile memory for storing data, metadata, and programs for execution by the processor. The storage 1106 includes storage means, such as a hard disk, flash disk drive, or other digital storage device, for storing data or instructions for performing the methods described herein. I/O interface 1108 allows a user to provide input to, receive output from, and otherwise transfer data to and receive data from computing device 1100. I/O interface 1108 may include a mouse, a keypad or keyboard, a touch screen, a camera, an optical scanner, a network interface, a modem, other known I/O devices, or a combination of such I/O interfaces. I/O interface 1108 may include one or more devices for presenting output to a user, including, but not limited to, a graphics engine, a display (e.g., a display screen), one or more output drivers (e.g., a display driver), one or more audio speakers, and one or more audio drivers. In some embodiments, I/O interface 1108 is configured to provide graphical data to a display for presentation to a user. The graphical data may represent one or more graphical user interfaces and/or any other graphical content that may serve a particular implementation. Communication interface 1111 may include hardware, software, or both. In any event, communication interface 1111 may provide one or more interfaces for communication (such as, for example, packet-based communication) between computing device 1100 and one or more other computing devices or networks. As an example, and not by way of limitation, communication interface 1111 may include a Network Interface Controller (NIC) or network adapter for communicating with an ethernet or other cable-based network, or a Wireless NIC (WNIC) or wireless adapter for communicating with a wireless network, such as WI-FI. Further, the communication interface 1111 may facilitate communication with various types of wired or wireless networks. The communication interface 1111 may also facilitate communication using various communication protocols. The communication infrastructure 1111 may also include hardware, software, or both that couple components of the computing device 1100 to one another. For example, communication interface 1111 may use one or more networks and/or protocols to enable multiple computing devices connected by a particular infrastructure to communicate with each other to perform one or more aspects of the processes described herein. To illustrate, the sequencing process may allow multiple devices (e.g., client devices, sequencing devices, and server devices) to exchange information such as sequencing data and error notifications. In the foregoing specification, the disclosure has been described with reference to specific exemplary embodiments thereof. Various embodiments and aspects of the disclosure are described with reference to details discussed herein, and the accompanying drawings illustrate the various embodiments. The above description and drawings are illustrative of the present disclosure and should not be construed as limiting the present disclosure. Numerous specific details are described to provide a thorough understanding of various embodiments of the present disclosure. The present disclosure may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. For example, the methods described herein may be performed with fewer or more steps/acts, or the steps/acts may be performed in a different order. Additionally, the steps/acts described herein may be repeated or performed in parallel with each other or with different instances of the same or similar steps/acts. The scope of the application is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

### Claims

Claims (20) 1. A system, comprising: At least one processor; and a non-transitory computer-readable medium comprising instructions that, when executed by the at least one processor, cause the system to: determining a base interpretation error rate for nucleotide base interpretations generated by the sequencing pipeline that differ from reference bases in the reference genome; detecting one or more base interpretation error patterns from the base interpretation error rates grouped according to base interpretation error type; identifying one or more sample base interpretation error patterns for one or more sample sequencing runs utilizing one or more sequencing pipelines corresponding to the sequencing pipeline based on the one or more base interpretation error patterns; and determining a source of failure corresponding to a base interpretation error type of the sequencing pipeline based on a correlation between the one or more base interpretation error patterns and the one or more sample base interpretation error patterns. 2. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to determine the base interpretation error rate by determining a nucleotide base interpretation generated by the sequencing pipeline that is different from a nucleotide specific error rate of the reference base. 3. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to: determining the base interpretation error rate of the groupings of different adjacent nucleotide bases that flank the incorrect nucleotide base interpretation, respectively, according to the base interpretation error type; and detecting the one or more base interpretation error patterns from the base interpretation error rates grouped according to the base interpretation error type and the different adjacent nucleotide bases. 4. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to determine the source of the fault corresponding to the sequencing pipeline by: determining a contribution measure indicative of a contribution of sequencing pipeline material to a base interpretation error from the sequencing pipeline; and determining the source of the fault of the base interpretation error type based on the contribution measure. 5. The system of claim 4, further comprising instructions that, when executed by the at least one processor, cause the system to determine the contribution metric by determining an allocable cause variation of the sequencing pipeline material that contributes to the base interpretation error from the sequencing pipeline. 6. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to provide a notification indicating the source of the fault for display on a computing device associated with the sequencing pipeline. 7. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to determine the source of the fault by identifying a consumable product, a portion of a sequencing machine, a software application or feature, or a portion of a nucleotide sample slide as factors contributing to sequencing variation in the sequencing pipeline. 8. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to determine the base interpretation error rate by utilizing a confusion matrix. 9. The system of claim 1, further comprising instructions that, when executed by the at least one processor, cause the system to identify the one or more sample base interpretation error patterns for the one or more sample sequencing runs by: Sorting a collection of sample sequencing runs from sample sequencing runs utilizing similar manufacturing materials based on manufacturing identification data; detecting base interpretation error patterns of different samples of the sample sequencing run collection; and identifying the one or more sample base interpretation error patterns from among the different sample base interpretation error patterns of the sample sequencing run set based on the correlation between the one or more base interpretation error patterns and the one or more sample base interpretation error patterns. 10. The system of claim 9, further comprising instructions that, when executed by the at least one processor, cause the system to detect the different sample base interpretation error pattern by: aggregating sample nucleotide fragment reads for the sample sequencing run; determining a sample nucleotide specific error rate for the sample nucleotide base interpretation that differs from the reference base; and the sample nucleotide specific error rates are grouped according to the type of base interpretation error and different adjacent nucleotide bases that flank the incorrect nucleotide base interpretation, respectively. 11. The system of claim 9, further comprising instructions that, when executed by the at least one processor, cause the system to classify the sample sequencing run collection utilizing similarly manufactured material by: truncating the manufacturing identification data; and a set of sequencing runs is generated by grouping a threshold number of sequencing runs that share the same truncated manufacturing identification data. 12. A non-transitory computer-readable medium comprising instructions that, when executed by at least one processor, cause a computing device to: determining a base interpretation error rate for nucleotide base interpretations generated by the sequencing pipeline that differ from reference bases in the reference genome; detecting one or more base interpretation error patterns from the base interpretation error rates grouped according to base interpretation error type; identifying one or more sample base interpretation error patterns for one or more sample sequencing runs utilizing one or more sequencing pipelines corresponding to the sequencing pipeline based on the one or more base interpretation error patterns; and determining a source of failure corresponding to a base interpretation error type of the sequencing pipeline based on a probability that the one or more base interpretation error patterns correspond to the one or more sample base interpretation error patterns. 13. The non-transitory computer-readable medium of claim 12, further comprising instructions that, when executed by the at least one processor, cause the computing device to determine the source of the fault corresponding to the sequencing pipeline by: determining a contribution measure using a statistical model, the contribution measure indicative of a probability that sequencing pipeline material contributes to a base interpretation error from the sequencing pipeline; and determining the source of the fault of the base interpretation error type based on the contribution measure. 14. The non-transitory computer-readable medium of claim 13, further comprising instructions that, when executed by the at least one processor, cause the computing device to determine the contribution metric using the statistical model by generating an allocable cause variance percentage of the sequencing pipeline material contributing to the base interpretation error using a variance component model. 15. The non-transitory computer-readable medium of claim 12, further comprising instructions that, when executed by the at least one processor, cause the computing device to identify the one or more sample base interpretation error patterns of the one or more sample sequencing runs by identifying existing sample base interpretation error patterns of the one or more sample sequencing runs or detecting new sample base interpretation error patterns of the one or more sample sequencing runs. 16. The non-transitory computer-readable medium of claim 12, further comprising instructions that, when executed by the at least one processor, cause the computing device to determine the base interpretation error rate based on normalizing a confusion matrix comprising base interpretation error data based on a correct nucleotide base interpretation total in a particular type of nucleotide base interpretation. 17. A computer-implemented method, comprising: determining a base interpretation error rate for nucleotide base interpretations generated by the sequencing pipeline that differ from reference bases in the reference genome; detecting one or more base interpretation error patterns from the base interpretation error rates grouped according to base interpretation error type; identifying one or more sample base interpretation error patterns for one or more sample sequencing runs utilizing one or more sequencing pipelines corresponding to the sequencing pipeline based on the one or more base interpretation error patterns; and determining a source of failure corresponding to a base interpretation error type of the sequencing pipeline based on a correlation between the one or more base interpretation error patterns and the one or more sample base interpretation error patterns. 18. The computer-implemented method of claim 17, further comprising: determining the base interpretation error rate of the groupings of different adjacent nucleotide bases flanking the incorrect nucleotide base interpretation; and detecting the one or more base interpretation error patterns from the base interpretation error rates grouped according to the different adjacent nucleotide bases. 19. The computer-implemented method of claim 17, wherein determining the base interpretation error rate comprises normalizing a confusion matrix comprising base interpretation error data based on one or more of a period, time, or nucleotide reads of base interpretation errors and a total number of correct nucleotide base interpretations in a particular type of nucleotide base interpretation. 20. The computer-implemented method of claim 17, further comprising determining a correlation between the one or more base interpretation error patterns and the one or more sample base interpretation error patterns by determining a percent allocable causal variation of sequencing pipeline material contributing to the base interpretation error of the base interpretation error type using a variance component model.
